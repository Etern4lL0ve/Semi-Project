/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2023-12-06 05:31:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.gz.member.model.vo.Member;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1699588138000L));
    _jspx_dependants.put("/views/mypage/../mypage/myCommentTable.jsp", Long.valueOf(1699588136000L));
    _jspx_dependants.put("/views/mypage/../mypage/interestTable.jsp", Long.valueOf(1699588136000L));
    _jspx_dependants.put("/views/mypage/../mypage/likeTable.jsp", Long.valueOf(1699588136000L));
    _jspx_dependants.put("/views/mypage/../mypage/myPostTable.jsp", Long.valueOf(1699588136000L));
    _jspx_dependants.put("/views/mypage/../common/menubar.jsp", Long.valueOf(1700048196000L));
    _jspx_dependants.put("jar:file:/D:/GgulZip/GgulZip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gz.member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("\r\n");
      out.write("\r\n");

//ContextRoot(ContextPath)를 꺼내놓기 (메소드를 이용하여)
String contextPath = request.getContextPath();
//로그인 정보 꺼내놓기 
//session객체에 loginUser 객체와 alertMsg 메세지를 담아놓음 
Member loginMember = (Member) session.getAttribute("loginMember");
String alertMsg = (String) session.getAttribute("alertMsg");
//로그인 전 menubar.jsp 로딩되면 loginUser == null
//로그인 후 menubar.jsp 로딩되면 로그인한 회원정보담긴 Member객체
//로그인 전 menubar.jsp 로딩되면 alertMsg == null
//로그인 후 menubar.jsp 로딩되면 alertMsg == 성공메세지 

//쿠키정보(쿠키 배열)
Cookie[] cookies = request.getCookies();

//쿠키배열에서 필요한 쿠키정보를 추출하기 
//반복으로 돌려서 해당 쿠키의 이름을 찾고 그 쿠키의 값을 담아두기 
String saveId = "";
if (cookies != null) {
	for (Cookie c : cookies) {

		if ((c.getName()).equals("memberId")) {
	saveId = c.getValue();
		}
	}
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<!-- Vendor CSS Files -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<!-- Vendor JS Files -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(":root{\r\n");
      out.write("	--maincolor :#f1cd1b; <!--노란색-->\r\n");
      out.write("}\r\n");
      out.write(".nav-area {\r\n");
      out.write("	background-color: #ffe14d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	width: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a:hover {\r\n");
      out.write("	background-color: #ccb020;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@font-face {\r\n");
      out.write("	font-family: 'SEBANG_Gothic_Bold';\r\n");
      out.write("	src:\r\n");
      out.write("		url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2104@1.0/SEBANG_Gothic_Bold.woff')\r\n");
      out.write("		format('woff');\r\n");
      out.write("	font-weight: normal;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form button {\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	background-color: rgb(255, 219, 41);\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rectangle {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 0.5px;\r\n");
      out.write("	background-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 드롭다운 스타일*/\r\n");
      out.write(".nav_main {\r\n");
      out.write("	font-weight: 900;\r\n");
      out.write("	font-size: 1.1rem;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: row;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	padding: 0 12px 0 12px;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	right: 0;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	flex: 0 0 auto;\r\n");
      out.write("	margin: 0 3rem;\r\n");
      out.write("	font-weight:900;\r\n");
      out.write("	padding-top:2rem;\r\n");
      out.write("	padding-bottom:2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item>a {\r\n");
      out.write("	color: #000000;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item>a:after {\r\n");
      out.write("	content: '';\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	top: -2px;\r\n");
      out.write("	width: 0;\r\n");
      out.write("	height: 2px;\r\n");
      out.write("	background-color: #000000;\r\n");
      out.write("	transition: width 0.2s ease-in-out;\r\n");
      out.write("	transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item:hover>a:after {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	display: block;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	background-color: #fffafa;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	top: 3.9rem;\r\n");
      out.write("	right: 0rem;\r\n");
      out.write("	width: 11rem;\r\n");
      out.write("	border: 1px solid rgb(99, 96, 96);\r\n");
      out.write("	box-shadow: 0 40px 40px rgb(0 0 0/ 6%);\r\n");
      out.write("	opacity: 0;\r\n");
      out.write("	visibility: hidden;\r\n");
      out.write("	transform: translateY(-10px);\r\n");
      out.write("	transition: transform 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a {\r\n");
      out.write("	display: block;\r\n");
      out.write("	color: #000000;\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a div {\r\n");
      out.write("	padding: 0.5rem 0rem 0.5rem 0.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_king:hover .dropdown_main {\r\n");
      out.write("	opacity: 1;\r\n");
      out.write("	visibility: visible;\r\n");
      out.write("	transform: translateY(0);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a:hover {\r\n");
      out.write("	background-color: #c9cac9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("<!--메뉴바 탑 헤더-->\r\n");
      out.write(".menubarTopHeader {\r\n");
      out.write("\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header{\r\n");
      out.write("       display:flex;\r\n");
      out.write("       flex-direction: column;\r\n");
      out.write("       align-items: center;\r\n");
      out.write("       justify-content: center;\r\n");
      out.write("       width: 100%\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("header.active {\r\n");
      out.write("    margin-bottom: 80px\r\n");
      out.write("}\r\n");
      out.write("header #sub{\r\n");
      out.write("	position: relative;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: flex-end;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    border-bottom: 1px solid var(--alpha-10);\r\n");
      out.write("}\r\n");
      out.write("header #sub .login-area{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: end;\r\n");
      out.write("    width: 1050px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("}\r\n");
      out.write("header #main {\r\n");
      out.write("       display: flex;\r\n");
      out.write("       align-items: center;\r\n");
      out.write("       justify-content: center;\r\n");
      out.write("       width: 1050px;\r\n");
      out.write("       padding: 0;\r\n");
      out.write("       margin: 15px 0\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("header #main>div {\r\n");
      out.write("    flex: 1\r\n");
      out.write("}\r\n");
      out.write("header #main .logo {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("\r\n");
      out.write("    font-size: 3em;\r\n");
      out.write("    font-weight: 700\r\n");
      out.write("}\r\n");
      out.write("header #main .logo div {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    font-family: GangwonEduPowerExtraBoldA,sans-serif\r\n");
      out.write("}\r\n");
      out.write("header #main .logo div:hover {\r\n");
      out.write("    cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("header #nav {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    background-color: rgb(241, 205, 27);\r\n");
      out.write("    width:1050px;\r\n");
      out.write("    height:50px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("header nav{\r\n");
      out.write("	 display: flex;\r\n");
      out.write("      flex-wrap: wrap;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      justify-content: start;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-info a{\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!--jstl 방식으로 contextPath를 다시 선언해주어야 jstl방식으로 contextPath를 이용해야한다. -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<!-- 회원 탈퇴시 받을 메시지 확인 -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("		var msg = '");
      out.print(alertMsg);
      out.write("'; //이건 가능 (문자열 처리해주기[값자체로 나옴])\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		if(msg != 'null'){ \r\n");
      out.write("			alert(msg);\r\n");
      out.write("			");
session.removeAttribute("alertMsg");
      out.write("\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		$(function(){\r\n");
      out.write("			\r\n");
      out.write("			//쿠키 아이디값 가져오기\r\n");
      out.write("			\r\n");
      out.write("			var saveId = \"");
      out.print(saveId);
      out.write("\";\r\n");
      out.write("			\r\n");
      out.write("			if(saveId!=\"\"){\r\n");
      out.write("				$(\"input[name=memberId]\").val(saveId);\r\n");
      out.write("				$(\"input[name=saveId]\").attr(\"checked\",true);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	<header>\r\n");
      out.write("		<section id=\"sub\">\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("			<div class=\"login-area\">\r\n");
      out.write("				");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /views/mypage/../common/menubar.jsp(329,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginMember}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("						<button onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/chat/Chat.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 10px;\">익명 채팅방</button>\r\n");
                  out.write("						<button\r\n");
                  out.write("							onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/member/Login.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 10px;\">로그인</button>\r\n");
                  out.write("						<button\r\n");
                  out.write("							onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/member/memberEnrollForm.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 20px;\">회원가입</button>\r\n");
                  out.write("					");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("					");
            //  c:otherwise
            org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
            boolean _jspx_th_c_005fotherwise_005f0_reused = false;
            try {
              _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
              if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("						<!--로그인 후 화면-->\r\n");
                  out.write("						<div class=\"user-info\">\r\n");
                  out.write("							<b>");
                  out.print(loginMember.getNickname());
                  out.write("님 환영합니다. &nbsp</b>\r\n");
                  out.write("							<a href=\"");
                  out.print(contextPath);
                  out.write("/myPage.me\">마이페이지</a> \r\n");
                  out.write("							<a href=\"");
                  out.print(contextPath);
                  out.write("/logout.me\">로그아웃</a>\r\n");
                  out.write("							\r\n");
                  out.write("						</div>\r\n");
                  out.write("					");
                  int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
              _jspx_th_c_005fotherwise_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
            }
            out.write("\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		\r\n");
      out.write("		</section>\r\n");
      out.write("		<section id=\"main\">\r\n");
      out.write("			<div class=\"logo\">\r\n");
      out.write("				<br>\r\n");
      out.write("				<div id=\"home\">\r\n");
      out.write("					<h2\r\n");
      out.write("						style=\"font-size: 48px; font-weight: bold; color: rgb(241, 205, 27); font-family: SEBANG_Gothic_Bold; display: inline;\">\r\n");
      out.write("						꿀.zip</h2>\r\n");
      out.write("					<img src=\"views/img/bee.png\" alt=\"Bee Image\" width=\"50\" height=\"50\"\r\n");
      out.write("						style=\"display: inline; margin-top: -15px\">\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("		<section id=\"nav\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<!-- 1번 메뉴 링크 -->\r\n");
      out.write("				<div class=\"nav_item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/nlist.no?currentPage=1\">공지사항</a>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<div class=\"dropdown_king nav_item\">\r\n");
      out.write("					<a href=\"#\">게시판</a>\r\n");
      out.write("					<div class=\"dropdown_main\">\r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=꿀팁\">\r\n");
      out.write("							<div>꿀팁게시판</div>\r\n");
      out.write("						</a> \r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=자유\">\r\n");
      out.write("							<div>자유게시판</div>\r\n");
      out.write("						</a> \r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=추천\">\r\n");
      out.write("							<div>추천게시판</div>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<div class=\"nav_item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/complainList.bo?currentPage=1\">신고/건의</a>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("		</section>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	</header>\r\n");
      out.write("	<br clear=\"both\">\r\n");
      out.write("	<!--float 해제 -->\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!--로그인 전 후 화면 나누기 -->\r\n");
      out.write("	<!--로그인 전 -->\r\n");
      out.write("	");

	if (loginMember == null) {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("        	function enrollPage(){\r\n");
      out.write("        		//아래와 같이 작성하면 디렉토리 구조가 노출이 되니 보안에 취약할 수 있다. \r\n");
      out.write("        		//location.href=\"/jsp/views/member/memberEnrollForm.jsp\";\r\n");
      out.write("        		//때문에 간단한 페이지 이동요청도 servlet을 거쳐서 요청에대한 응답페이지를 돌려받자.\r\n");
      out.write("        		console.log(\"회원가입 클릭\");\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/enrollForm.me\";\r\n");
      out.write("        		\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	function findidPage() {\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/findId.me\";\r\n");
      out.write("        	}\r\n");
      out.write("        \r\n");
      out.write("        	function findpwPage() {\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/findPwd.me\";\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("\r\n");
      out.write("	");

	} else {
	
      out.write('\r');
      out.write('\n');
      out.write('	');

	}
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    document.getElementById(\"home\").addEventListener(\"click\", function() {\r\n");
      out.write("        // 클릭 이벤트 처리\r\n");
      out.write("        window.location.href = \"");
      out.print(contextPath);
      out.write("\"; \r\n");
      out.write("        // 원하는 페이지로 이동\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\n");
      out.write("\n");
      out.write("<title>Users / Profile - NiceAdmin Bootstrap Template</title>\n");
      out.write("<meta content=\"\" name=\"description\">\n");
      out.write("<meta content=\"\" name=\"keywords\">\n");
      out.write("	<!-- Favicons -->\n");
      out.write("	<link href=\"resources/assets/img/favicon.png\" rel=\"icon\">\n");
      out.write("	<link href=\"resources/assets/img/apple-touch-icon.png\"\n");
      out.write("		rel=\"apple-touch-icon\">\n");
      out.write("	\n");
      out.write("	<!-- Google Fonts -->\n");
      out.write("	<link href=\"https://fonts.gstatic.com\" rel=\"preconnect\">\n");
      out.write("	<link\n");
      out.write("		href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i\"\n");
      out.write("		rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- Template Main CSS File -->\n");
      out.write("<!-- <link href=\"../../resources/assets/css/style.css\" rel=\"stylesheet\"> -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(":root {\n");
      out.write("  scroll-behavior: smooth;\n");
      out.write("}\n");
      out.write("\n");
      out.write("body {\n");
      out.write("  font-family: \"Open Sans\", sans-serif;\n");
      out.write("  background: #f6f9ff;\n");
      out.write("  color: #444444;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a {\n");
      out.write("  color: #4154f1;\n");
      out.write("  text-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("a:hover {\n");
      out.write("  color: #717ff5;\n");
      out.write("  text-decoration: none;\n");
      out.write("}\n");
      out.write("\n");
      out.write("h1,\n");
      out.write("h2,\n");
      out.write("h3,\n");
      out.write("h4,\n");
      out.write("h5,\n");
      out.write("h6 {\n");
      out.write("  font-family: \"Nunito\", sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write("table>tbody tr .title:hover{\n");
      out.write("	cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# Main\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write("#main {\n");
      out.write("  margin-top: 60px; \n");
      out.write("  padding: 60px;\n");
      out.write("  transition: all 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("@media (max-width: 1200px) {\n");
      out.write("  #main {\n");
      out.write("    padding: 20px;\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# Page Title\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write(".pagetitle {\n");
      out.write("  margin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".pagetitle h1 {\n");
      out.write("  font-size: 24px;\n");
      out.write("  margin-bottom: 0;\n");
      out.write("  font-weight: 600;\n");
      out.write("  color: #012970;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("/* Card */\n");
      out.write(".card {\n");
      out.write("  margin-bottom: 30px;\n");
      out.write("  border: none;\n");
      out.write("  border-radius: 5px;\n");
      out.write("  box-shadow: 0px 0 30px rgba(1, 41, 112, 0.1);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-header,\n");
      out.write(".card-footer {\n");
      out.write("  border-color: #ebeef4;\n");
      out.write("  background-color: #fff;\n");
      out.write("  color: #798eb3;\n");
      out.write("  padding: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-title {\n");
      out.write("  padding: 20px 0 15px 0;\n");
      out.write("  font-size: 18px;\n");
      out.write("  font-weight: 900;\n");
      out.write("  color: #012970;\n");
      out.write("  font-family: \"Poppins\", sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-title span {\n");
      out.write("  color: #899bbd;\n");
      out.write("  font-size: 14px;\n");
      out.write("  font-weight: 400;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-body {\n");
      out.write("  padding: 0 20px 20px 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".card-img-overlay {\n");
      out.write("  background-color: rgba(255, 255, 255, 0.6);\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* Bordered Tabs */\n");
      out.write(".nav-tabs-bordered {\n");
      out.write("  border-bottom: 2px solid #ebeef4;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".nav-tabs-bordered .nav-link {\n");
      out.write("  margin-bottom: -2px;\n");
      out.write("  border: none;\n");
      out.write("  color: #2c384e;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".nav-tabs-bordered .nav-link:hover,\n");
      out.write(".nav-tabs-bordered .nav-link:focus {\n");
      out.write("  color: #FDD946;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".nav-tabs-bordered .nav-link.active {\n");
      out.write("  background-color: #fff;\n");
      out.write("  color: black;\n");
      out.write("  border-bottom: 2px solid #FDD946;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# Profie Page\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write(".profile .profile-card img {\n");
      out.write("  max-width: 120px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-card h2 {\n");
      out.write("  font-size: 24px;\n");
      out.write("  font-weight: 700;\n");
      out.write("  color: #2c384e;\n");
      out.write("  margin: 10px 0 0 0;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-card h3 {\n");
      out.write("  font-size: 18px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-card .social-links a {\n");
      out.write("  font-size: 20px;\n");
      out.write("  display: inline-block;\n");
      out.write("  color: rgba(1, 41, 112, 0.5);\n");
      out.write("  line-height: 0;\n");
      out.write("  margin-right: 10px;\n");
      out.write("  transition: 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-card .social-links a:hover {\n");
      out.write("  color: #012970;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-overview .row {\n");
      out.write("  margin-bottom: 20px;\n");
      out.write("  font-size: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-overview .card-title {\n");
      out.write("  color: #012970;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-overview .label {\n");
      out.write("  font-weight: 600;\n");
      out.write("  color: rgba(1, 41, 112, 0.6);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-edit label {\n");
      out.write("  font-weight: 600;\n");
      out.write("  color: rgba(1, 41, 112, 0.6);\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile .profile-edit img {\n");
      out.write("  max-width: 120px;\n");
      out.write("}\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# 테이블 뒤로가기 버튼\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write(".back-btn{\n");
      out.write("	margin:20px;\n");
      out.write("}\n");
      out.write("#tableBackBtn{\n");
      out.write("	display:none;\n");
      out.write("}\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# 테이블 스타일\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write(".table-container {\n");
      out.write("            max-height: 600px;\n");
      out.write("            overflow-y: auto;\n");
      out.write("           \n");
      out.write("}\n");
      out.write(".myTable {\n");
      out.write("    border-collapse: collapse;\n");
      out.write("    width: 100%;\n");
      out.write("}\n");
      out.write(".myTable th{\n");
      out.write("    border: 1px solid black;\n");
      out.write("    padding: 8px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write(".myTable td{\n");
      out.write("    border: 1px solid black;\n");
      out.write("    padding: 8px;\n");
      out.write("    text-overflow: ellipsis;\n");
      out.write("    white-space: nowrap;\n");
      out.write("    overflow: hidden;\n");
      out.write("    max-width: 100px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write(".myTable td.title{\n");
      out.write("	text-align:left;\n");
      out.write("}\n");
      out.write(".myTable>thead {\n");
      out.write("    position: sticky;\n");
      out.write("    top: 0;\n");
      out.write("    background-color: #f8f8f8;\n");
      out.write("}\n");
      out.write(".myTable>tfoot{\n");
      out.write("	text-align:center;\n");
      out.write("}\n");
      out.write("/*체크박스를 포함한 td 스타일 설정(가운데 정렬)*/\n");
      out.write(".tdForChkBox {\n");
      out.write("	text-align: center;\n");
      out.write("	vertical-align: middle;\n");
      out.write("	height: 100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".chkBoxTh {\n");
      out.write("	width: 10%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# 각 테이블 위 헤더 스타일\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write("#interest-header,#like-header,#myPost-header,#myComment-header{\n");
      out.write("	display: flex;\n");
      out.write("	align-items: center;\n");
      out.write("	width: 100%;\n");
      out.write("	justify-content: space-between;\n");
      out.write("}\n");
      out.write(".flexDiv{\n");
      out.write("align-items: center;\n");
      out.write("	display: flex;\n");
      out.write("}\n");
      out.write(".flexDiv button{\n");
      out.write("	margin-left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/*--------------------------------------------------------------\n");
      out.write("# 마이페이지 검색창 스타일\n");
      out.write("--------------------------------------------------------------*/\n");
      out.write(".search {\n");
      out.write("    position: relative;\n");
      out.write("    width: 300px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write(".search-input {\n");
      out.write("  width: 100%;\n");
      out.write("  height: 35px;\n");
      out.write("  border: 1px solid #012970;\n");
      out.write("  border-radius: 8px;\n");
      out.write("  padding: 10px 12px;\n");
      out.write("  font-size: 14px;\n");
      out.write("  margin-left:20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".search-icon {\n");
      out.write("  position : absolute;\n");
      out.write("  width: 17px;\n");
      out.write("  top: 10px;\n");
      out.write("  right: 5px;\n");
      out.write("  \n");
      out.write("  margin: 0;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	\n");
      out.write("	<!-- 정보 수정 후 alsertMsg받아서 처리 -->\n");
      out.write("   	");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\n");
      out.write("	<!-- ======= Header ======= -->\n");
      out.write("	\n");
      out.write("	<main id=\"main\" class=\"main\">\n");
      out.write("		<div class=\"pagetitle\">\n");
      out.write("			<h1>마이페이지</h1>\n");
      out.write("		</div>\n");
      out.write("		<!-- End Page Title -->\n");
      out.write("\n");
      out.write("		<section class=\"section profile\">\n");
      out.write("			<div class=\"row\">\n");
      out.write("				<!--좌측 프로필,이름,이메일 보이는 구역-->\n");
      out.write("				<div class=\"col-xl-3\">\n");
      out.write("					<div class=\"card\">\n");
      out.write("						<div\n");
      out.write("							class=\"card-body profile-card pt-4 d-flex flex-column align-items-center\">\n");
      out.write("							<img src=\"resources/assets/img/profile-img.jpg\" alt=\"Profile\"\n");
      out.write("								class=\"rounded-circle\">\n");
      out.write("							<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\n");
      out.write("							<br>\n");
      out.write("							<h3>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("							<div class=\"social-links mt-2\">\n");
      out.write("								<a href=\"#\" class=\"twitter\"><i class=\"bi bi-twitter\"></i></a> <a\n");
      out.write("									href=\"#\" class=\"facebook\"><i class=\"bi bi-facebook\"></i></a> <a\n");
      out.write("									href=\"#\" class=\"instagram\"><i class=\"bi bi-instagram\"></i></a>\n");
      out.write("								<a href=\"#\" class=\"linkedin\"><i class=\"bi bi-linkedin\"></i></a>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<!--좌측 프로필,이름,이메일 보이는 구역 끝-->\n");
      out.write("				\n");
      out.write("				<!--우측 card 구역 시작-->\n");
      out.write("				<div class=\"col-xl-8\">	\n");
      out.write("					<div class=\"card\">\n");
      out.write("						<div class=\"card-body pt-3\">\n");
      out.write("							<!--탭 구역-->\n");
      out.write("							<ul class=\"nav nav-tabs nav-tabs-bordered\">\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link active\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-info\">내 정보</button>\n");
      out.write("								</li>\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-interest\"\n");
      out.write("										id=\"interestPostTab\">관심 글</button>\n");
      out.write("								</li>\n");
      out.write("\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-like\"\n");
      out.write("										id=\"likePostTab\">내가 좋아요 한 글</button>\n");
      out.write("								</li>\n");
      out.write("\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-post\"\n");
      out.write("										id=\"myPostTab\">내가 쓴 글</button>\n");
      out.write("								</li>\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-comment\"\n");
      out.write("										id=\"myCommentTab\">내가 쓴 댓글</button>\n");
      out.write("								</li>\n");
      out.write("\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-change-password\"\n");
      out.write("										id=\"changePwdTab\">비밀번호 변경</button>\n");
      out.write("								</li>\n");
      out.write("								<li class=\"nav-item\">\n");
      out.write("									<button class=\"nav-link\" data-bs-toggle=\"tab\"\n");
      out.write("										data-bs-target=\"#profile-delete_member\"\n");
      out.write("										id=\"deleteMemberTab\">회원 탈퇴</button>\n");
      out.write("								</li>\n");
      out.write("							</ul>\n");
      out.write("							<!--탭 구역 끝-->\n");
      out.write("							\n");
      out.write("							<div class=\"tab-content pt-2\">\n");
      out.write("								<!--내정보/정보변경 내용 구역-->\n");
      out.write("								\n");
      out.write("								\n");
      out.write("									<div class=\"tab-pane fade show active profile-overview\"\n");
      out.write("										id=\"profile-info\">\n");
      out.write("										<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/memUpdate.my\" method=\"post\">\n");
      out.write("										<h5 class=\"card-title\">내 정보</h5>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"profileImage\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">프로필</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<img src=\"resources/assets/img/profile-img.jpg\" alt=\"Profile\">\n");
      out.write("												<div class=\"pt-2\">\n");
      out.write("													<!--프로필 사진 업로드 구현-->\n");
      out.write("													<!--부트스트랩에서 제공하는 업로드 버튼을 사용해서 file업로드를 구현하기 위해\n");
      out.write("	                        file이란 id를 가진 input태그를 숨겨두고 label만 보이게 해둠. label 안에는 \n");
      out.write("	                      부트스트랩에서 제공하는 업로드버튼형식의 div가 있고, div를 클릭하면 file창이 열림.-->\n");
      out.write("													<label for=\"file\">\n");
      out.write("														<div class=\"btn btn-primary btn-sm btn-sm\"\n");
      out.write("															title=\"Upload new profile image\">\n");
      out.write("															프로필 업로드\n");
      out.write("															<i class=\"bi bi-upload\"></i>\n");
      out.write("														</div>\n");
      out.write("														\n");
      out.write("													</label> \n");
      out.write("													<input type=\"file\" name=\"file\" id=\"file\"\n");
      out.write("														style=\"display: none;\"> \n");
      out.write("														\n");
      out.write("												</div>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"userId\" class=\"col-md-4 col-lg-3 col-form-label\">아이디</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"userId\" type=\"text\" class=\"form-control\"\n");
      out.write("													id=\"userId\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"userId\" class=\"col-md-4 col-lg-3 col-form-label\">이름</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"userName\" type=\"text\" class=\"form-control\"\n");
      out.write("													id=\"userName\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"userNickName\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">별명</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"userNickName\" type=\"text\" class=\"form-control\"\n");
      out.write("													id=\"userNickName\" maxlength=\"15\"  value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("												<p style=\"margin-top: 5px; color:red;\">최대 15글자 입력 가능</p>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"email\" class=\"col-md-4 col-lg-3 col-form-label\">이메일</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"email\" type=\"email\" class=\"form-control\"\n");
      out.write("													id=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"enrollDate\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">가입일</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												\n");
      out.write("												<input name=\"enrollDate\" type=\"text\" class=\"form-control\"\n");
      out.write("													id=\"enrollDate\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.enrolldate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("										<div class=\"text-center\">\n");
      out.write("											<button type=\"submit\" id=\"memUpdateBtn\" class=\"btn btn-primary btn-sm\">수정 완료</button>\n");
      out.write("										</div>\n");
      out.write("									\n");
      out.write("										</form>\n");
      out.write("									</div>\n");
      out.write("								\n");
      out.write("								<!--내정보 내용 구역 끝-->\n");
      out.write("\n");
      out.write("								<!--관심글 내용 구역-->\n");
      out.write("								");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>관심글 테이블</title>\n");
      out.write("<style>\n");
      out.write("	.modal-body input{\n");
      out.write("		width:100%;\n");
      out.write("		height:100%;\n");
      out.write("		border-width: 0;\n");
      out.write("	}\n");
      out.write("	#myFolderNames {\n");
      out.write("		color:#000080; <!--네이비-->\n");
      out.write("	}\n");
      out.write("	.modal-title b{\n");
      out.write("		color:#000080;\n");
      out.write("		margin-left: 15px;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	#currentFolderName{\n");
      out.write("		color:#012970; <!--관심글 타이틀이랑 같은 색-->\n");
      out.write("	}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"tab-pane fade pt-3\" id=\"profile-interest\">\n");
      out.write("		<div id=\"interest-header\">\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<h5 class=\"card-title\">관심글</h5>\n");
      out.write("				<div class=\"search\">\n");
      out.write("				  <input type=\"text\" class=\"search-input\" id=\"interestSearchInput\" placeholder=\"제목으로 검색\">\n");
      out.write("				  <img class=\"search-icon\" src=\"https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<button id=\"goMoveFolderModal\" class=\"btn btn-dark btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#moveFolderModal\">폴더 이동</button>\n");
      out.write("				<button id=\"goAddFolderModal\" class=\"btn btn-primary btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#addFolderModal\" >폴더 추가</button>\n");
      out.write("				<button id=\"interestChkBoxBtn\" class=\"btn btn-primary btn-sm\">선택</button>\n");
      out.write("				<button id=\"deleteInterestBtn\" class=\"btn btn-danger btn-sm\" style=\"display:none\">삭제</button>	\n");
      out.write("			</div>\n");
      out.write("						\n");
      out.write("		</div>\n");
      out.write("		<button type=\"button\" id=\"tableBackBtn\" class=\"btn btn-dark back-btn\">뒤로가기</button>\n");
      out.write("		 <!--현재 폴더 값 담아둘 hidden input태그 -->\n");
      out.write("		<input type=\"hidden\" id=\"currentFolderNo\" value=\"0\">\n");
      out.write("		<div>\n");
      out.write("			<p id=\"currentFolderName\">\n");
      out.write("				<b>현재 폴더 : /</b>\n");
      out.write("			</p>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"table-container\">\n");
      out.write("			<table class=\"table table-dark table-hover myTable\" id=\"interestTable\">\n");
      out.write("				<colgroup>\n");
      out.write("				      <col width=\"10%\" />\n");
      out.write("				      <col width=\"15%\" />\n");
      out.write("				      <col width=\"40%\" />\n");
      out.write("				      <col width=\"15%\" />\n");
      out.write("				</colgroup>\n");
      out.write("				<thead>\n");
      out.write("					<tr>\n");
      out.write("						<th>번호</th>\n");
      out.write("						<th>분류</th>\n");
      out.write("						<th colspan='2'>제목</th>\n");
      out.write("						<th>수정일</th>\n");
      out.write("					</tr>\n");
      out.write("				</thead>\n");
      out.write("				<tbody>\n");
      out.write("				</tbody>\n");
      out.write("				<tfoot>\n");
      out.write("				</tfoot>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("		<!-- 폴더 추가 모달창 -->\n");
      out.write("		<div class=\"modal fade\" id=\"addFolderModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("			<div>\n");
      out.write("			  <div class=\"modal-dialog\">\n");
      out.write("			    <div class=\"modal-content\">\n");
      out.write("			      <div class=\"modal-header\">\n");
      out.write("			        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">폴더 추가</h1>\n");
      out.write("			        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("			      </div>\n");
      out.write("			      <div class=\"modal-body\">\n");
      out.write("			        <input type=\"text\" id=\"addFolderInput\" placeholder=\"추가할 폴더 이름 입력\">\n");
      out.write("			      </div>\n");
      out.write("			      <div class=\"modal-footer\">\n");
      out.write("			        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">닫기</button>\n");
      out.write("			        <button type=\"button\" class=\"btn btn-primary\" id=\"addFolderBtn\" data-bs-dismiss=\"modal\">폴더 추가</button>\n");
      out.write("			      </div>\n");
      out.write("			    </div>\n");
      out.write("			  </div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		<!-- 폴더 이동 모달창 -->\n");
      out.write("		<div class=\"modal fade\" id=\"moveFolderModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("			<div>\n");
      out.write("			  <div class=\"modal-dialog\">\n");
      out.write("			    <div class=\"modal-content\">\n");
      out.write("			      <div class=\"modal-header\">\n");
      out.write("			        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">폴더 이동<b>[폴더이름 - 폴더번호]</b></h1>\n");
      out.write("			        \n");
      out.write("			        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("			      </div>\n");
      out.write("			      <div class=\"modal-body\">\n");
      out.write("			      	<b>내 폴더 목록 [최상단으로 가려면 0입력]</b>\n");
      out.write("			      	<p id=\"myFolderNames\"></p>\n");
      out.write("			        <input type=\"text\" id=\"moveFolderInput\" placeholder=\"이동할 폴더의 번호 입력\">\n");
      out.write("			      </div>\n");
      out.write("			      <div class=\"modal-footer\">\n");
      out.write("			        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">닫기</button>\n");
      out.write("			        <button type=\"button\" class=\"btn btn-primary\" id=\"moveFolderBtn\" data-bs-dismiss=\"modal\">폴더 이동</button>\n");
      out.write("			      </div>\n");
      out.write("			    </div>\n");
      out.write("			  </div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	\n");
      out.write("	</div>\n");
      out.write("	<!------------------------관심글 태그 관련 스크립트 시작------------------------------------>\n");
      out.write("	<script>\n");
      out.write("		//관심탭 클릭 이벤트 (관심글 모아둔 테이블에 최상위 폴더,게시글 보여주기)\n");
      out.write("		$(\"#interestPostTab\").click(function(){\n");
      out.write("		    //ajax를 이용하여 클릭된 폴더를 상위폴더로 취하는 폴더 리스트와\n");
      out.write("		    //클릭된 폴더번호를 갖고있는 관심글 리스트를 가져올 리스트를 만들어 둔다.\n");
      out.write("		    //db로부터 폴더/게시글을 조회해서 가져오기 전에 tbody tfoot 비우기\n");
      out.write("		    resetTable();\n");
      out.write("		    changeToSelectInterest();\n");
      out.write("		    $(\"#tableBackBtn\").attr(\"style\", \"display:none;\");\n");
      out.write("		    \n");
      out.write("		    //폴더 리스트 / 게시글 리스트\n");
      out.write("		    var fList = [];\n");
      out.write("		    var pList = [];\n");
      out.write("		    \n");
      out.write("		    \n");
      out.write("		    //최상단 폴더 불러오기\n");
      out.write("		    $.ajax({\n");
      out.write("		        url : \"topFolder.fd\",\n");
      out.write("		        data :{ \n");
      out.write("		            //유저 번호 전달\n");
      out.write("		            mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        async:false, //비동기처리를 순서대로 하기 위해 추가\n");
      out.write("		        success : function(result){\n");
      out.write("		            fList = result;\n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"최상단 폴더 불러오기 실패\");\n");
      out.write("		        }\n");
      out.write("		    });\n");
      out.write("		    //최상단 게시글 불러오기\n");
      out.write("		    $.ajax({\n");
      out.write("		        url : \"topInterst.in\",\n");
      out.write("		        data :{ \n");
      out.write("		            //유저 번호 전달\n");
      out.write("		            mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        async:false, //비동기처리를 순서대로 하기 위해 추가\n");
      out.write("		        success : function(result){\n");
      out.write("		            pList = result;\n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"최상단 게시글 불러오기 실패\");\n");
      out.write("		        }\n");
      out.write("		    }); \n");
      out.write("		    //보여줄 폴더나 게시글이 존재한다면		\n");
      out.write("		    if(fList.length != 0 || pList.length !=0){\n");
      out.write("		    	$('#interestChkBoxBtn').attr('style','display:block');\n");
      out.write("		        appendFolderToTable(fList);\n");
      out.write("		        appendPostToTable(pList);\n");
      out.write("		    } else {\n");
      out.write("		        //보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("		        $('#interestChkBoxBtn').attr('style','display:none');\n");
      out.write("		        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"관심 게시글이 존재하지 않습니다.\"));\n");
      out.write("		        $(\"#interestTable>tfoot\").append(tr);\n");
      out.write("		    }\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		//관심태그 내 테이블에 존재하는 행 내 제목(폴더 또는 게시글) 클릭 이벤트\n");
      out.write("		$(\"#interestTable>tbody\").on(\"click\",\"tr td.title\",function(){\n");
      out.write("			var parentTr = $(this).closest('tr');\n");
      out.write("		    //분류가 폴더일때는 하위폴더로 이동하도록\n");
      out.write("		    if(parentTr.children().eq(1).text() == '폴더'){\n");
      out.write("		        //ajax를 이용하여 클릭된 폴더를 상위폴더로 취하는 폴더 리스트와\n");
      out.write("		        //클릭된 폴더번호를 갖고있는 관심글 리스트를 가져올 리스트를 만들어 둔다.\n");
      out.write("		        var fList = [];\n");
      out.write("		        var pList = [];\n");
      out.write("		        \n");
      out.write("		        //폴더 클릭 시 현재 폴더 p태그에 나타내기 추후 뒤로가기할때 요소 하나씩 빼려면 class 네임 부여 필요해보임\n");
      out.write("		        $(\"#currentFolderName\").append( \n");
      out.write("		        						$(\"<b class='currentFolderName'></b>\").append(parentTr.children().eq(2).text()+\"/\")\n");
      out.write("		        						);\n");
      out.write("		        \n");
      out.write("		        //하위폴더에 존재하는 폴더 구현\n");
      out.write("		        $.ajax({\n");
      out.write("		        url : \"subFolder.fd\",\n");
      out.write("		        data :{ \n");
      out.write("		            //폴더 번호 전달\n");
      out.write("		            fno : parentTr.children().first().text(),\n");
      out.write("		            mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        async:false, //async false로 처리하면 순서대로 처리 가능.\n");
      out.write("		        success : function(result){\n");
      out.write("		            //미리 만들어둔 리스트에 일단 저장\n");
      out.write("		            fList = result;\n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"하위폴더에 존재하는 폴더 구현 실패\");\n");
      out.write("		        }\n");
      out.write("		        });\n");
      out.write("		        //하위폴더에 존재하는 게시글 구현\n");
      out.write("		        $.ajax({\n");
      out.write("		            url : \"subInterst.in\",\n");
      out.write("		            data :{ \n");
      out.write("		                //유저 번호 전달\n");
      out.write("		                mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("		                fno : parentTr.children().first().text()\n");
      out.write("		            },\n");
      out.write("		            async:false,\n");
      out.write("		            success : function(result){\n");
      out.write("		                //미리 만들어둔 리스트에 일단 저장\n");
      out.write("		                pList = result;\n");
      out.write("		            },\n");
      out.write("		            error : function(){\n");
      out.write("		                console.log(\"하위폴더에 존재하는 게시글 구현 실패\");\n");
      out.write("		            }\n");
      out.write("		        }); \n");
      out.write("		        \n");
      out.write("		        \n");
      out.write("	            //폴더를 눌렀을때 보여줄 폴더나 게시글이 존재한다면 테이블 비우고 다시 채우기\n");
      out.write("	            resetTable();\n");
      out.write("	            changeToSelectInterest();\n");
      out.write("	            //뒤로가기 버튼 보이게 하기\n");
      out.write("	            $(\"#tableBackBtn\").attr(\"style\", \"display:inline-block;\");\n");
      out.write("	            //현재 클릭한 폴더번호를 저장해두기\n");
      out.write("	            $(\"#currentFolderNo\").val(parentTr.children().first().text());\n");
      out.write("	            console.log($(\"#currentFolderNo\").val());\n");
      out.write("\n");
      out.write("	          	//보여줄 폴더나 게시글이 존재한다면		\n");
      out.write("			    if(fList.length != 0 || pList.length !=0){\n");
      out.write("			    	$('#interestChkBoxBtn').attr('style','display:block');\n");
      out.write("			        appendFolderToTable(fList);\n");
      out.write("			        appendPostToTable(pList);\n");
      out.write("			    } else {\n");
      out.write("			        //보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("			        $('#interestChkBoxBtn').attr('style','display:none');\n");
      out.write("			        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"관심 게시글이 존재하지 않습니다.\"));\n");
      out.write("			        $(\"#interestTable>tfoot\").append(tr);\n");
      out.write("			    }\n");
      out.write("		        \n");
      out.write("		        \n");
      out.write("		        \n");
      out.write("		    } else {\n");
      out.write("		        //분류가 게시판일때는 게시판 상세보기로 이동하도록\n");
      out.write("		        //parentTr.children().first().text() -> 클릭된 행중 첫번째 요소(폴더 or 게시글 번호)\n");
      out.write("		        location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/detail.bo?postNo=\"+parentTr.children().first().text();\n");
      out.write("		        \n");
      out.write("		    }\n");
      out.write("		    \n");
      out.write("		});\n");
      out.write("\n");
      out.write("		//관심글 폴더 구조 뒤로가기 버튼 구현\n");
      out.write("		$(\"#tableBackBtn\").click(function(){\n");
      out.write("		    //ajax를 이용하여 클릭된 폴더를 상위폴더로 취하는 폴더 리스트와\n");
      out.write("		    //클릭된 폴더번호를 갖고있는 관심글 리스트를 가져올 리스트를 만들어 둔다.\n");
      out.write("		    //db로부터 폴더/게시글을 조회해서 가져오기 전에 tbody tfoot 비우기\n");
      out.write("		    resetTable();\n");
      out.write("		    changeToSelectInterest();\n");
      out.write("		    //result 리스트를 담을 빈 리스트 준비. 담아서 한번에 처리하기 위함\n");
      out.write("		    var fList = [];\n");
      out.write("		    var pList = [];\n");
      out.write("		    \n");
      out.write("		    //현재 폴더 번호를 저장\n");
      out.write("		    var cuFolderNo = $(\"#currentFolderNo\").val();\n");
      out.write("		    //현재 폴더 이름 저장한 p태그에서 currentFolderName 이란 클래스 이름을 가진 요소들 중 마지막 제거\n");
      out.write("		    $(\".currentFolderName:last\").remove();\n");
      out.write("		    \n");
      out.write("		    //상위폴더 리스트 가져오기\n");
      out.write("		    $.ajax({\n");
      out.write("		        url : \"backFolder.fd\",\n");
      out.write("		        data :{ \n");
      out.write("		            //유저 번호\n");
      out.write("		            mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("		            //현재 폴더 번호 전달\n");
      out.write("		            cuFolderNo : cuFolderNo\n");
      out.write("		        },\n");
      out.write("		        async:false, //비동기처리를 순서대로 하기 위해 추가\n");
      out.write("		        success : function(result){\n");
      out.write("		            fList = result;\n");
      out.write("		            //현재 폴더 번호를 upFolderNo로 변경해주기. 뒤로가기할때 현재 폴더번호를 상위폴더번호로 변경하는 것.\n");
      out.write("		            $(\"#currentFolderNo\").val(fList[0].upFolderNo);\n");
      out.write("		            console.log($(\"#currentFolderNo\").val());\n");
      out.write("		            if($(\"#currentFolderNo\").val() == 0){\n");
      out.write("		                //뒤로가기 버튼 안 보이게 하기\n");
      out.write("		                $(\"#tableBackBtn\").attr(\"style\", \"display:none;\");\n");
      out.write("		            }      \n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"상위폴더 리스트 가져오기 실패\");\n");
      out.write("		        }\n");
      out.write("		    });\n");
      out.write("		    //상위폴더에 있는 게시글 가져오기\n");
      out.write("		    $.ajax({\n");
      out.write("		        url : \"backInterest.in\",\n");
      out.write("		        data :{ \n");
      out.write("		            //유저 번호\n");
      out.write("		            mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("		            //현재 폴더 번호 전달\n");
      out.write("		            cuFolderNo : cuFolderNo\n");
      out.write("		        },\n");
      out.write("		        async:false, //비동기처리를 순서대로 하기 위해 추가\n");
      out.write("		        success : function(result){\n");
      out.write("		            pList = result;\n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"상위폴더에 있는 게시글 가져오기 실패\");\n");
      out.write("		        }\n");
      out.write("		    }); \n");
      out.write("		    \n");
      out.write("		    //상위폴더로 갔을때 폴더나 게시글 둘중 하나라도 있다면\n");
      out.write("		    if(fList.length != 0 || pList.length != 0){\n");
      out.write("		    	//선택 버튼 없어졌을 경우 다시 보이도록\n");
      out.write("		    	$('#interestChkBoxBtn').attr('style','display:block');\n");
      out.write("		        //폴더를 눌렀을때 보여줄 폴더나 게시글이 존재한다면 테이블 비우고 다시 채우기\n");
      out.write("		        resetTable();\n");
      out.write("		        appendFolderToTable(fList);\n");
      out.write("		        appendPostToTable(pList);\n");
      out.write("		    }\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		//관심글 테이블 체크박스 생성하는 버튼\n");
      out.write("		$('#interestChkBoxBtn').click(function() {\n");
      out.write("			\n");
      out.write("			//interestTable안에 interestChkBox라는 클래스이름을 가진 요소가 없으면 체크박스 추가\n");
      out.write("			if (($('#interestTable').find('.interestChkBox').length === 0) && $('#interestChkBoxBtn').text() == \"선택\") {\n");
      out.write("				changeToDeselectInterest();\n");
      out.write("				$('#interestTable thead tr').append('<th class=\"chkBoxTh\">선택</th>');\n");
      out.write("				$('#interestTable tbody tr').each(function() {\n");
      out.write("                    $(this).append('<td class=\"tdForChkBox\"><input type=\"checkbox\" name=\"\" class=\"interestChkBox\"></td>');\n");
      out.write("            	});\n");
      out.write("            } else {\n");
      out.write("            	changeToSelectInterest();\n");
      out.write("	            \n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("		//관심글 삭제 \n");
      out.write("		$('#deleteInterestBtn').click(function(){\n");
      out.write("			if($(\".interestChkBox:checked\").length>0){\n");
      out.write("				if(confirm(\"정말로 삭제하시겠습니까?\\n폴더를 삭제하시면 폴더 내 데이터는 전부 삭제됩니다.\")){\n");
      out.write("					//체크된 폴더 번호를 담을 배열과 게시글 번호를 담을 배열\n");
      out.write("					var folderNoArr = [];\n");
      out.write("					var postNoArr = [];\n");
      out.write("					//interestChkBox라는 클래스이름을 가진 chkBox중 체크 된것들 반복\n");
      out.write("					$(\".interestChkBox:checked\").each(function(index,element){\n");
      out.write("						//체크된 체크박스에서 가장 가까운 tr요소의 2번째 td자식요소가 분류값을 가지고 있고, 그 이름이 폴더라면\n");
      out.write("						if($(element).closest('tr').find('td:nth-child(2)').text() == '폴더'){\n");
      out.write("							//폴더 배열에 폴더번호를 넣는다.\n");
      out.write("							folderNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("						}else{\n");
      out.write("							//아니라면 게시글 번호 배열에 번호 넣기.\n");
      out.write("							postNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("						}								\n");
      out.write("					});\n");
      out.write("					\n");
      out.write("					$.ajax({\n");
      out.write("						url:\"interestDelete.my\",\n");
      out.write("						data:{\n");
      out.write("							mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("							folderNoArr: folderNoArr,\n");
      out.write("							postNoArr : postNoArr\n");
      out.write("						},\n");
      out.write("\n");
      out.write("						async : false,\n");
      out.write("						success : function(result){\n");
      out.write("							console.log(\"통신 성공\");\n");
      out.write("							if(result == \"success\"){\n");
      out.write("								$(\"#interestPostTab\").click();\n");
      out.write("								alert(\"삭제 성공\");\n");
      out.write("								\n");
      out.write("							}else {\n");
      out.write("								alert(\"삭제 실패\");\n");
      out.write("							}\n");
      out.write("						},\n");
      out.write("						error : function(){\n");
      out.write("							console.log(\"관심글 삭제 통신 실패\");\n");
      out.write("						}\n");
      out.write("					});\n");
      out.write("				}	\n");
      out.write("			} else {\n");
      out.write("				alert(\"삭제할 폴더 혹은 게시글을 선택해주세요.\");\n");
      out.write("			}	\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		//검색창 입력 이벤트\n");
      out.write("		$(function () {\n");
      out.write("			var timeout = null; // 타이핑이 멈춘 후 대기 시간을 저장할 변수\n");
      out.write("			\n");
      out.write("			$(\"#interestSearchInput\").keyup(function(){\n");
      out.write("			   clearTimeout(timeout); // 기존 타이머를 취소\n");
      out.write("			\n");
      out.write("			   timeout = setTimeout(function () {\n");
      out.write("					// 1초 이후에 실행할 함수를 여기에 작성\n");
      out.write("					console.log($(\"#interestSearchInput\").val());\n");
      out.write("					var inputData = $(\"#interestSearchInput\").val();\n");
      out.write("					if(inputData == \"\"){\n");
      out.write("						$(\"#interestPostTab\").click();\n");
      out.write("					} else {\n");
      out.write("						$.ajax({\n");
      out.write("							url:\"searchInterest.my\",\n");
      out.write("							data:{\n");
      out.write("								inputData: inputData,\n");
      out.write("								mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("							},\n");
      out.write("							success:function(result){\n");
      out.write("								if(result.length !=0){\n");
      out.write("									resetTable();\n");
      out.write("									appendPostToTable(result);\n");
      out.write("								} else{\n");
      out.write("									resetTable();\n");
      out.write("									//보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("							        $('#interestChkBoxBtn').attr('style','display:none');\n");
      out.write("							        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"검색결과에 일치하는 관심 게시글이 존재하지 않습니다.\"));\n");
      out.write("							        $(\"#interestTable>tfoot\").append(tr);\n");
      out.write("								}\n");
      out.write("								\n");
      out.write("							},\n");
      out.write("							error:function(){\n");
      out.write("								console.log(\"검색창 입력 이벤트\");\n");
      out.write("							}\n");
      out.write("						});\n");
      out.write("					}\n");
      out.write("			   }, 800);\n");
      out.write("			 });\n");
      out.write("	    });\n");
      out.write("		\n");
      out.write("		//폴더 추가 버튼\n");
      out.write("		$(\"#addFolderBtn\").click(function(){\n");
      out.write("			if($(\"addFolderInput\").val() != \"\"){\n");
      out.write("				$.ajax({\n");
      out.write("					url:\"addFolder.my\",\n");
      out.write("					data : {\n");
      out.write("						mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("						folderName: $(\"#addFolderInput\").val(),\n");
      out.write("						currentFolderNo: $(\"#currentFolderNo\").val()\n");
      out.write("					},\n");
      out.write("					success : function(result){\n");
      out.write("						if(result === \"success\"){\n");
      out.write("							alert(\"폴더 추가 완료\");\n");
      out.write("							$(\"#interestPostTab\").click();\n");
      out.write("							\n");
      out.write("						}else {\n");
      out.write("							alert(\"폴더 추가 실패\");\n");
      out.write("						}\n");
      out.write("						//입력칸 초기화\n");
      out.write("						$(\"#addFolderInput\").val(\"\");\n");
      out.write("					},\n");
      out.write("					error : function(){\n");
      out.write("						console.log(\"폴더 추가버튼 클릭 통신 에러\");\n");
      out.write("					}\n");
      out.write("				\n");
      out.write("				});\n");
      out.write("			} else {\n");
      out.write("				alert(\"폴더이름이 입력되지 않았습니다.\");\n");
      out.write("			}	\n");
      out.write("		});\n");
      out.write("		//폴더이동 누르면 p태그에 내가 갖고있는 폴더 번호 불러오기\n");
      out.write("		$(\"#goMoveFolderModal\").click(function(){\n");
      out.write("			\n");
      out.write("			$.ajax({\n");
      out.write("				url : \"getMyFolderName.my\",\n");
      out.write("				data : {\n");
      out.write("					mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("				},\n");
      out.write("				success : function(result){\n");
      out.write("					var str = \"\";\n");
      out.write("					for(var i=0; i<result.length;i++){\n");
      out.write("						if(i == result.length -1){\n");
      out.write("							str+=\"[\"+result[i].folderName+\"-\"+result[i].folderNo+\"]\";\n");
      out.write("						}else{\n");
      out.write("							str+=\"[\"+result[i].folderName+\"-\"+result[i].folderNo+\"],\";\n");
      out.write("						}\n");
      out.write("						\n");
      out.write("					}\n");
      out.write("					\n");
      out.write("					$(\"#myFolderNames\").html(str);\n");
      out.write("				},\n");
      out.write("				error : function(){\n");
      out.write("					console.log(\"폴더이동 모달창 클릭 통신 에러\");\n");
      out.write("				}\n");
      out.write("				\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		\n");
      out.write("		//폴더/게시글 이동 버튼\n");
      out.write("		$(\"#moveFolderBtn\").click(function(){\n");
      out.write("			if($(\".interestChkBox:checked\").length>0){\n");
      out.write("				//체크된 폴더 번호를 담을 배열과 게시글 번호를 담을 배열\n");
      out.write("				var folderNoArr = [];\n");
      out.write("				var postNoArr = [];\n");
      out.write("				//interestChkBox라는 클래스이름을 가진 chkBox중 체크 된것들 반복\n");
      out.write("				$(\".interestChkBox:checked\").each(function(index,element){\n");
      out.write("					//체크된 체크박스에서 가장 가까운 tr요소의 2번째 td자식요소가 분류값을 가지고 있고, 그 이름이 폴더라면\n");
      out.write("					if($(element).closest('tr').find('td:nth-child(2)').text() == '폴더'){\n");
      out.write("						//폴더 배열에 폴더번호를 넣는다.\n");
      out.write("						folderNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("					}else{\n");
      out.write("						//아니라면 게시글 번호 배열에 번호 넣기.\n");
      out.write("						postNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("					}								\n");
      out.write("				});\n");
      out.write("\n");
      out.write("				$.ajax({\n");
      out.write("					url : \"moveFolder.my\",\n");
      out.write("					data : {\n");
      out.write("						mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("						targetFolderNo : $(\"#moveFolderInput\").val(),\n");
      out.write("						folderNoArr : folderNoArr,\n");
      out.write("						postNoArr : postNoArr\n");
      out.write("					},\n");
      out.write("					async : false,\n");
      out.write("					success : function(result){\n");
      out.write("						console.log(result);\n");
      out.write("						if(result == \"NNNNY\"){\n");
      out.write("							alert(\"이동이 완료되었습니다.\");\n");
      out.write("							$(\"#interestPostTab\").click();\n");
      out.write("\n");
      out.write("						}else if(result == \"CONFLICT\"){\n");
      out.write("							alert(\"이동에 실패하였습니다.\\n이동 대상 폴더와 이동되는 폴더의 번호가 일치합니다.\");\n");
      out.write("						} else{\n");
      out.write("							alert(\"이동에 실패하였습니다. 존재하는 폴더 번호를 입력해주세요.\");\n");
      out.write("						}\n");
      out.write("						\n");
      out.write("						//입력칸 초기화\n");
      out.write("						$(\"#moveFolderInput\").val(\"\");\n");
      out.write("					},\n");
      out.write("					error : function(){\n");
      out.write("						console.log(\"폴더/게시판 이동 통신 에러\");\n");
      out.write("					}\n");
      out.write("				});\n");
      out.write("			} else {\n");
      out.write("				alert(\"이동시킬 폴더 혹은 게시글을 선택해주세요.\");\n");
      out.write("			}\n");
      out.write("			\n");
      out.write("		});\n");
      out.write("	\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		//조회해온 폴더 리스트를 table에 뿌려주는 함수\n");
      out.write("		function appendFolderToTable(fList){\n");
      out.write("			for(var i=0; i<fList.length;i++){\n");
      out.write("	            var tr = $(\"<tr></tr>\");\n");
      out.write("	            var folderNo = $(\"<th></th>\").text(fList[i].folderNo);\n");
      out.write("	            var classify = $(\"<td>폴더</td>\");\n");
      out.write("	            var folderName = $(\"<td colspan='2' class='title'></td>\").text(fList[i].folderName);\n");
      out.write("	            var folderImg = $(\"<img src='resources/assets/img/folder_icon.png'>\");\n");
      out.write("	            folderName.prepend(folderImg);\n");
      out.write("	            var createDate = $(\"<td></td>\").text(fList[i].createDate);\n");
      out.write("	            tr.append(folderNo,classify,folderName,createDate);\n");
      out.write("	            $(\"#interestTable>tbody\").append(tr);					\n");
      out.write("	        }\n");
      out.write("		}\n");
      out.write("		//조회해온 게시물 리스트를 table에 뿌려주는 함수\n");
      out.write("		function appendPostToTable(pList){\n");
      out.write("			for(var i=0; i<pList.length;i++){\n");
      out.write("				var tr = $(\"<tr></tr>\");\n");
      out.write("	            var postNo = $(\"<th></th>\").text(pList[i].postNo);\n");
      out.write("	            var classify = $(\"<td>게시글</td>\");\n");
      out.write("	            var title = $(\"<td colspan='2' class='title'></td>\").text(pList[i].title);\n");
      out.write("	            var postDate = $(\"<td></td>\").text(pList[i].postDate);\n");
      out.write("	            tr.append(postNo,classify,title,postDate);\n");
      out.write("	            $(\"#interestTable>tbody\").append(tr);				\n");
      out.write("	        }\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//tbody,thead, '선택' th 비우는 함수\n");
      out.write("		function resetTable(){\n");
      out.write("			$(\"#interestTable>tbody\").empty();\n");
      out.write("		    $(\"#interestTable>tfoot\").empty();\n");
      out.write("		    $('#interestTable thead tr .chkBoxTh').remove();\n");
      out.write("		}\n");
      out.write("\n");
      out.write("		//선택 해제 버튼 -> 선택 버튼으로 변경\n");
      out.write("		function changeToDeselectInterest(){\n");
      out.write("			//삭제 버튼 보이기\n");
      out.write("			$('#deleteInterestBtn').attr('style','display:block');\n");
      out.write("			$(\"#interestChkBoxBtn\").attr(\"class\", \"btn btn-secondary btn-sm btn-sm\");\n");
      out.write("			$(\"#interestChkBoxBtn\").text(\"선택 해제\");\n");
      out.write("		\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//선택 해제 버튼 -> 선택 버튼으로 변경\n");
      out.write("		function changeToSelectInterest(){\n");
      out.write("			//삭제 버튼 숨이기\n");
      out.write("			$('#deleteInterestBtn').attr('style','display:none');\n");
      out.write("			$(\"#interestChkBoxBtn\").attr(\"class\", \"btn btn-primary btn-sm btn-sm\");\n");
      out.write("			$(\"#interestChkBoxBtn\").text(\"선택\");\n");
      out.write("			$('#interestTable thead tr .chkBoxTh').remove();\n");
      out.write("			$('#interestTable tbody tr .interestChkBox').parents('td').remove();\n");
      out.write("		}\n");
      out.write("	</script>\n");
      out.write("	<!------------------------관심글 태그 관련 스크립트 끝------------------------------------>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("								<!--관심글 내용 구역 끝-->\n");
      out.write("								\n");
      out.write("								<!--좋아요 내용 구역-->\n");
      out.write("								");
      out.write('\n');

	

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>마이페이지 내 좋아요 탭 클릭시 나오는 테이블</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"tab-pane fade profile-edit pt-3\" id=\"profile-like\">\n");
      out.write("		<div id=\"like-header\">\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<h5 class=\"card-title\">좋아요 한 글</h5>\n");
      out.write("				<div class=\"search\">\n");
      out.write("				  <input type=\"text\" class=\"search-input\" id=\"likeSearchInput\" placeholder=\"제목으로 검색\">\n");
      out.write("				  <img class=\"search-icon\" src=\"https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<button id=\"likeChkBoxBtn\" class=\"btn btn-primary btn-sm\" style=\"display:none;\">선택</button>\n");
      out.write("				<button id=\"deleteLikeBtn\" class=\"btn btn-danger btn-sm\" style=\"display:none\">삭제</button>	\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("	      	<div class=\"table-container\">\n");
      out.write("		      <table class=\"table table-dark table-hover myTable\" id=\"likeTable\">\n");
      out.write("					<colgroup>\n");
      out.write("					      <col width=\"5%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"30%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"15%\" />\n");
      out.write("					</colgroup>\n");
      out.write("					<thead>\n");
      out.write("						\n");
      out.write("						<tr>\n");
      out.write("							<th>번호</th>\n");
      out.write("							<th>카테고리</th>\n");
      out.write("							<th>제목</th>						\n");
      out.write("							<th>조회수</th>\n");
      out.write("							<th>작성자</th>\n");
      out.write("							<th>등록일</th>\n");
      out.write("						</tr>\n");
      out.write("					</thead>\n");
      out.write("					<tbody>\n");
      out.write("					\n");
      out.write("					</tbody>\n");
      out.write("					<tfoot>\n");
      out.write("					\n");
      out.write("					</tfoot>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("	</div>\n");
      out.write("	<!------------------------좋아요 태그 관련 스크립트 시작----------------------------------->\n");
      out.write("	<script>\n");
      out.write("		\n");
      out.write("		//좋아요 탭 클릭 이벤트\n");
      out.write("		$(\"#likePostTab\").click(function(){\n");
      out.write("		    $.ajax({\n");
      out.write("		        url: \"likeList.ll\",\n");
      out.write("		        data:{\n");
      out.write("		            mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        success : function(result){\n");
      out.write("		        	//탭 클릭시 좋아요 테이블을 일단 비우기(비우지 않으면 다른 탭 갔다가 다시 좋아요 탭을 누르면 tr이 쌓임.)\n");
      out.write("		            resetLikeTable();\n");
      out.write("		        	//선택 버튼으로 초기화시키기\n");
      out.write("		            changeToSelectLike();\n");
      out.write("					 \n");
      out.write("		            //비운 다음 db에 접근해서 가져온 result값들로 채우기\n");
      out.write("		            if(result.length > 0){\n");
      out.write("		            	$('#likeChkBoxBtn').attr('style','display:block');\n");
      out.write("		            	appendLikePostToTable(result);\n");
      out.write("		            	for(var i=0; i<100;i++){\n");
      out.write("		                    var tr = $(\"<tr></tr>\");\n");
      out.write("		                    var postNo = $(\"<th></th>\").text(i+\"\");\n");
      out.write("		                    var category = $(\"<td ></td>\").text(i+\"\");\n");
      out.write("		                    var title = $(\"<td class='title'></td>\").text(i+\"\");\n");
      out.write("		                    var count = $(\"<td></td>\").text(i+\"\");\n");
      out.write("		                    var writer = $(\"<td></td>\").text(i+\"\");\n");
      out.write("		                    var date = $(\"<td></td>\").text(i+\"\");\n");
      out.write("		                    tr.append(postNo,category,title,writer,count,date);\n");
      out.write("		                    $(\"#likeTable>tbody\").append(tr);\n");
      out.write("		                }\n");
      out.write("		            } else{\n");
      out.write("		            	//내가 좋아요 한 게시글이 존재하지 않는다면\n");
      out.write("		            	$('#likeChkBoxBtn').attr('style','display:none');\n");
      out.write("		                var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"내가 쓴 게시글이 존재하지 않습니다.\"));\n");
      out.write("		                $(\"#likeTable>tfoot\").append(tr);\n");
      out.write("		            } \n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"좋아요 탭 클릭 이벤트 실패\");\n");
      out.write("		        }\n");
      out.write("		    });  \n");
      out.write("		});\n");
      out.write("\n");
      out.write("\n");
      out.write("		//좋아요 한 게시글 tr 클릭 이벤트\n");
      out.write("		$(\"#likeTable>tbody\").on(\"click\",\"tr td.title\",function(){\n");
      out.write("			var parentTr = $(this).closest('tr');\n");
      out.write("			//게시판 상세보기로 이동하도록\n");
      out.write("	        //parentTr.children().first().text() -> 클릭된 행중 첫번째 요소(폴더 or 게시글 번호)\n");
      out.write("	        location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/detail.bo?postNo=\"+parentTr.children().first().text();\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		//좋아요 테이블 체크박스 생성하는 버튼\n");
      out.write("		$('#likeChkBoxBtn').click(function() {\n");
      out.write("			\n");
      out.write("			//LikeTable안에 likeChkBox라는 클래스이름을 가진 요소가 없으면 체크박스 추가\n");
      out.write("			//만약 likeChkBoxBtn이 선택이라는 text를 가지고 있으면 '선택' 버튼의 역할을 수행\n");
      out.write("			if (($('#likeTable').find('.likeChkBox').length === 0)&&$('#likeChkBoxBtn').text()==\"선택\") {\n");
      out.write("				changeToDeselectLike();\n");
      out.write("				$('#likeTable thead tr').append('<th class=\"chkBoxTh\">선택</th>');\n");
      out.write("				$('#likeTable tbody tr').each(function() {\n");
      out.write("                    $(this).append('<td class=\"tdForChkBox\"><input type=\"checkbox\" name=\"\" class=\"likeChkBox\"></td>');\n");
      out.write("            	});\n");
      out.write("            } else {\n");
      out.write("            	//만약 likeChkBoxBtn이 '선택해제'라는 text를 가지고 있으면 '선택 해제' 버튼의 역할을 수행\n");
      out.write("            	changeToSelectLike();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("		\n");
      out.write("\n");
      out.write("    	\n");
      out.write("		//좋아요 삭제 \n");
      out.write("		$('#deleteLikeBtn').click(function(){\n");
      out.write("			if($(\".likeChkBox:checked\").length>0){\n");
      out.write("				if(confirm(\"정말로 삭제하시겠습니까?\")){\n");
      out.write("					//체크된 게시글 번호를 담을 배열\n");
      out.write("					var postNoArr = [];\n");
      out.write("					//likeChkBox라는 클래스이름을 가진 chkBox중 체크 된것들 반복\n");
      out.write("					$(\".likeChkBox:checked\").each(function(index,element){\n");
      out.write("							postNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("						\n");
      out.write("					});\n");
      out.write("					\n");
      out.write("					$.ajax({\n");
      out.write("						url:\"likeDelete.my\",\n");
      out.write("						data:{\n");
      out.write("							mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("							postNoArr : postNoArr\n");
      out.write("						},\n");
      out.write("					\n");
      out.write("						async : false,\n");
      out.write("						success : function(result){\n");
      out.write("							console.log(\"통신 성공\");\n");
      out.write("							if(result == \"success\"){\n");
      out.write("								$(\"#likePostTab\").click();\n");
      out.write("								alert(\"삭제 성공\");\n");
      out.write("							}else {\n");
      out.write("								alert(\"삭제 실패\");\n");
      out.write("							}\n");
      out.write("						},\n");
      out.write("						error : function(){\n");
      out.write("							console.log(\"좋아요 삭제 통신 실패\");\n");
      out.write("						}\n");
      out.write("					});\n");
      out.write("				} \n");
      out.write("			}else {\n");
      out.write("				alert(\"삭제할 게시글을 선택해주세요.\");\n");
      out.write("			}	\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		//검색창 입력 이벤트\n");
      out.write("		$(function () {\n");
      out.write("			var timeout = null; // 타이핑이 멈춘 후 대기 시간을 저장할 변수\n");
      out.write("			\n");
      out.write("			$(\"#likeSearchInput\").keyup(function(){\n");
      out.write("			   clearTimeout(timeout); // 기존 타이머를 취소\n");
      out.write("			\n");
      out.write("			   timeout = setTimeout(function () {\n");
      out.write("					// 1초 이후에 실행할 함수를 여기에 작성\n");
      out.write("					var inputData = $(\"#likeSearchInput\").val();\n");
      out.write("					if(inputData == \"\"){\n");
      out.write("						$(\"#likePostTab\").click();\n");
      out.write("					} else {\n");
      out.write("						$.ajax({\n");
      out.write("							url:\"searchLike.my\",\n");
      out.write("							data:{\n");
      out.write("								inputData: inputData,\n");
      out.write("								mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("							},\n");
      out.write("							success:function(result){\n");
      out.write("								resetLikeTable();\n");
      out.write("								changeToSelectLike();\n");
      out.write("								if(result.length !=0){\n");
      out.write("									//탭 클릭시 좋아요 테이블을 일단 비우기(비우지 않으면 다른 탭 갔다가 다시 좋아요 탭을 누르면 tr이 쌓임.)\n");
      out.write("									appendLikePostToTable(result);\n");
      out.write("								} else{\n");
      out.write("\n");
      out.write("									//보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("							        $('#likeChkBoxBtn').attr('style','display:none');\n");
      out.write("							        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"검색결과에 일치하는 좋아요한 게시글이 존재하지 않습니다.\"));\n");
      out.write("							        $(\"#likeTable>tfoot\").append(tr);\n");
      out.write("								}\n");
      out.write("								\n");
      out.write("							},\n");
      out.write("							error:function(){\n");
      out.write("								console.log(\"검색창 입력 이벤트\");\n");
      out.write("							}\n");
      out.write("						});\n");
      out.write("					}\n");
      out.write("			   }, 800);\n");
      out.write("			 });\n");
      out.write("	    }); \n");
      out.write("		\n");
      out.write("		//테이블에 좋아요 글 넣는 반복문 함수\n");
      out.write("		function appendLikePostToTable(result){\n");
      out.write("			for(var i=0; i<result.length;i++){\n");
      out.write("                var tr = $(\"<tr></tr>\");\n");
      out.write("                var postNo = $(\"<th></th>\").text(result[i].postNo);\n");
      out.write("                var category = $(\"<td ></td>\").text(result[i].categoryNo);\n");
      out.write("                var title = $(\"<td class='title'></td>\").text(result[i].title);\n");
      out.write("                var count = $(\"<td></td>\").text(result[i].count);\n");
      out.write("                var writer = $(\"<td></td>\").text(result[i].writerNo);\n");
      out.write("                var date = $(\"<td></td>\").text(result[i].enrollDate);\n");
      out.write("                tr.append(postNo,category,title,count,writer,date);\n");
      out.write("                $(\"#likeTable>tbody\").append(tr);\n");
      out.write("            }\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//테이블 초기화\n");
      out.write("		function resetLikeTable(){\n");
      out.write("			$(\"#likeTable>tbody\").empty();\n");
      out.write("            $(\"#likeTable>tfoot\").empty();\n");
      out.write("		}\n");
      out.write("		//선택 해제 -> 선택\n");
      out.write("		function changeToSelectLike(){\n");
      out.write("			$('#deleteLikeBtn').attr('style','display:none');\n");
      out.write("			$('#likeChkBoxBtn').attr('class','btn btn-primary btn-sm');\n");
      out.write("			$('#likeChkBoxBtn').text('선택');\n");
      out.write("			$('#likeTable thead tr .chkBoxTh').remove();\n");
      out.write("			$('#likeTable tbody tr .likeChkBox').parents('td').remove();\n");
      out.write("		}\n");
      out.write("		//선택 >- 선택 해제\n");
      out.write("		function changeToDeselectLike(){\n");
      out.write("			$('#deleteLikeBtn').attr('style','display:block');\n");
      out.write("			$('#likeChkBoxBtn').attr('class','btn btn-secondary btn-sm');\n");
      out.write("			$('#likeChkBoxBtn').text('선택 해제');\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("	</script>\n");
      out.write("	\n");
      out.write("	<!------------------------좋아요 태그 관련 스크립트 끝------------------------------------>\n");
      out.write("		 \n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("								<!--좋아요 내용 구역 끝-->\n");
      out.write("\n");
      out.write("								<!--내가 쓴 글 내용 구역-->\n");
      out.write("								");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>마이페이지 내 내가 쓴 글 탭 클릭시 나오는 테이블</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"tab-pane fade profile-edit pt-3\" id=\"profile-post\">\n");
      out.write("		<div id=\"myPost-header\">\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<h5 class=\"card-title\">내가 쓴 글</h5>\n");
      out.write("				<div class=\"search\">\n");
      out.write("				  <input type=\"text\" class=\"search-input\" id=\"myPostSearchInput\" placeholder=\"제목으로 검색\">\n");
      out.write("				  <img class=\"search-icon\" src=\"https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<button id=\"myPostChkBoxBtn\" class=\"btn btn-primary btn-sm\" style=\"display:none\">선택</button>\n");
      out.write("				<button id=\"deleteMyPostBtn\" class=\"btn btn-danger btn-sm\" style=\"display:none\">삭제</button>	\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("	      	<div class=\"table-container\">\n");
      out.write("		      <table class=\"table table-dark table-hover myTable\" id=\"myPostTable\">\n");
      out.write("					<colgroup>\n");
      out.write("					      <col width=\"5%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"30%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"15%\" />\n");
      out.write("					</colgroup>\n");
      out.write("					<thead>\n");
      out.write("						\n");
      out.write("						<tr>\n");
      out.write("							<th>번호</th>\n");
      out.write("							<th>카테고리</th>\n");
      out.write("							<th>제목</th>\n");
      out.write("							<th>조회수</th>\n");
      out.write("							<th>작성자</th>\n");
      out.write("							<th>등록일</th>\n");
      out.write("						</tr>\n");
      out.write("					</thead>\n");
      out.write("					<tbody>\n");
      out.write("					\n");
      out.write("					</tbody>\n");
      out.write("					<tfoot>\n");
      out.write("					\n");
      out.write("					</tfoot>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("	</div>\n");
      out.write("	<!------------------------내가 쓴 글 태그 관련 스크립트 시작------------------------------------>\n");
      out.write("	<script>\n");
      out.write("		//내가 쓴 글 탭 클릭 이벤트\n");
      out.write("		$(\"#myPostTab\").click(function(){   \n");
      out.write("		    $.ajax({\n");
      out.write("		        url: \"myPostList.my\",\n");
      out.write("		        data:{\n");
      out.write("		            mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        success : function(result){\n");
      out.write("		        	resetMyPostTable();\n");
      out.write("		        	changeToSelectMyPost()\n");
      out.write("		            //내가 쓴 게시글이 존재한다면\n");
      out.write("		            if(result.length>0){\n");
      out.write("		            	$('#myPostChkBoxBtn').attr('style','display:block');\n");
      out.write("		            	appendMyPostToTable(result);\n");
      out.write("		            } else {\n");
      out.write("		            	//내가 쓴 게시글이 존재하지 않는다면\n");
      out.write("		            	$('#myPostChkBoxBtn').attr('style','display:none');\n");
      out.write("		                var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"내가 쓴 게시글이 존재하지 않습니다.\"));\n");
      out.write("		                $(\"#myPostTable>tfoot\").append(tr);\n");
      out.write("		            }\n");
      out.write("		            \n");
      out.write("		        \n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"내가 쓴 글 탭 클릭 이벤트 실패\");\n");
      out.write("		        }\n");
      out.write("		    });\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		//내가 쓴 게시글 tr 클릭 이벤트\n");
      out.write("		$(\"#myPostTable>tbody\").on(\"click\",\"tr td.title\",function(){\n");
      out.write("			var parentTr = $(this).closest('tr');\n");
      out.write("			//게시판 상세보기로 이동하도록\n");
      out.write("	        //parentTr.children().first().text() -> 클릭된 행중 첫번째 요소(폴더 or 게시글 번호)\n");
      out.write("	        location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/detail.bo?postNo=\"+parentTr.children().first().text();\n");
      out.write("		});\n");
      out.write("		//내가 쓴 글 테이블 체크박스 생성하는 버튼\n");
      out.write("		$('#myPostChkBoxBtn').click(function() {\n");
      out.write("			//LikeTable안에 LikeChkBox라는 클래스이름을 가진 요소가 없으면 체크박스 추가, 버튼의 text가 '선택' 이라면 선택버튼 역할 수행\n");
      out.write("			if (($('#myPostTable').find('.myPostChkBox').length === 0) && $('#myPostChkBoxBtn').text() == \"선택\" ) {\n");
      out.write("				//선택 해제로 변경\n");
      out.write("				changeToDeselectMyPost();\n");
      out.write("				$('#myPostTable thead tr').append('<th class=\"chkBoxTh\">선택</th>');\n");
      out.write("				$('#myPostTable tbody tr').each(function() {\n");
      out.write("                    $(this).append('<td class=\"tdForChkBox\"><input type=\"checkbox\" name=\"\" class=\"myPostChkBox\"></td>');\n");
      out.write("            	});\n");
      out.write("            } else {\n");
      out.write("            	//선택 해제 버튼의 역할 수행,선택 버튼으로 변경\n");
      out.write("            	changeToSelectMyPost();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("\n");
      out.write("		//내가 쓴 글 삭제 \n");
      out.write("		$('#deleteMyPostBtn').click(function(){\n");
      out.write("			if($(\".myPostChkBox:checked\").length>0){\n");
      out.write("				if(confirm(\"정말로 삭제하시겠습니까?\")){\n");
      out.write("					//체크된 게시글 번호를 담을 배열\n");
      out.write("					var postNoArr = [];\n");
      out.write("					//likeChkBox라는 클래스이름을 가진 chkBox중 체크 된것들 반복\n");
      out.write("					$(\".myPostChkBox:checked\").each(function(index,element){\n");
      out.write("							postNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("						\n");
      out.write("					});\n");
      out.write("					\n");
      out.write("					$.ajax({\n");
      out.write("						url:\"myPostDelete.my\",\n");
      out.write("						data:{\n");
      out.write("							mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("							postNoArr : postNoArr\n");
      out.write("						},\n");
      out.write("						async : false,\n");
      out.write("						success : function(result){\n");
      out.write("							console.log(\"통신 성공\");\n");
      out.write("							if(result == \"success\"){\n");
      out.write("								$(\"#myPostTab\").click();\n");
      out.write("								alert(\"삭제 성공\");\n");
      out.write("								\n");
      out.write("							}else {\n");
      out.write("								alert(\"삭제 실패\");\n");
      out.write("							}\n");
      out.write("						},\n");
      out.write("						error : function(){\n");
      out.write("							console.log(\"내가 쓴 글 삭제 통신 실패\");\n");
      out.write("						}\n");
      out.write("					});\n");
      out.write("				} \n");
      out.write("			}else {\n");
      out.write("				alert(\"삭제할 게시글을 선택해주세요.\");\n");
      out.write("			}	\n");
      out.write("		});\n");
      out.write("		//검색창 입력 이벤트\n");
      out.write("		$(function () {\n");
      out.write("			var timeout = null; // 타이핑이 멈춘 후 대기 시간을 저장할 변수\n");
      out.write("			\n");
      out.write("			$(\"#myPostSearchInput\").keyup(function(){\n");
      out.write("			   clearTimeout(timeout); // 기존 타이머를 취소\n");
      out.write("			\n");
      out.write("			   timeout = setTimeout(function () {\n");
      out.write("					// 1초 이후에 실행할 함수를 여기에 작성\n");
      out.write("					console.log($(\"#myPostSearchInput\").val());\n");
      out.write("					var inputData = $(\"#myPostSearchInput\").val();\n");
      out.write("					if(inputData == \"\"){\n");
      out.write("						$(\"#myPostTab\").click();\n");
      out.write("					} else {\n");
      out.write("						$.ajax({\n");
      out.write("							url:\"searchMyPost.my\",\n");
      out.write("							data:{\n");
      out.write("								inputData: inputData,\n");
      out.write("								mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("							},\n");
      out.write("							success:function(result){\n");
      out.write("								resetMyPostTable();\n");
      out.write("								changeToSelectMyPost();\n");
      out.write("								if(result.length !=0){\n");
      out.write("									appendMyPostToTable(result);\n");
      out.write("								} else{\n");
      out.write("									//보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("							        $('#myPostChkBoxBtn').attr('style','display:none');\n");
      out.write("							        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"검색결과에 일치하는 게시글이 존재하지 않습니다.\"));\n");
      out.write("							        $(\"#myPostTable>tfoot\").append(tr);\n");
      out.write("								}\n");
      out.write("								\n");
      out.write("							},\n");
      out.write("							error:function(){\n");
      out.write("								console.log(\"검색창 입력 이벤트 통신 실패\");\n");
      out.write("							}\n");
      out.write("						});\n");
      out.write("					}\n");
      out.write("			   }, 800);\n");
      out.write("			 });\n");
      out.write("	    }); \n");
      out.write("		//테이블에 글 넣는 반복문 함수\n");
      out.write("		function appendMyPostToTable(result){\n");
      out.write("			for(var i=0; i<result.length;i++){\n");
      out.write("                var tr = $(\"<tr></tr>\");\n");
      out.write("                var postNo = $(\"<th></th>\").text(result[i].postNo);\n");
      out.write("                var category = $(\"<td></td>\").text(result[i].categoryNo);\n");
      out.write("                var title = $(\"<td class='title'></td>\").text(result[i].title);\n");
      out.write("                var count = $(\"<td></td>\").text(result[i].count);\n");
      out.write("                var writer = $(\"<td></td>\").text(result[i].writerNo);\n");
      out.write("                var date = $(\"<td></td>\").text(result[i].enrollDate);\n");
      out.write("                tr.append(postNo,category,title,count,writer,date);\n");
      out.write("                $(\"#myPostTable>tbody\").append(tr);\n");
      out.write("           	}\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//테이블 비우기\n");
      out.write("		function resetMyPostTable(){\n");
      out.write("			 $(\"#myPostTable>tbody\").empty();\n");
      out.write("	         $(\"#myPostTable>tfoot\").empty();\n");
      out.write("		}\n");
      out.write("\n");
      out.write("		//선택 해제 -> 선택\n");
      out.write("		function changeToSelectMyPost(){\n");
      out.write("			$('#deleteMyPostBtn').attr('style','display:none');\n");
      out.write("			$('#myPostChkBoxBtn').attr('class','btn btn-primary btn-sm');\n");
      out.write("			$('#myPostChkBoxBtn').text('선택');\n");
      out.write("			$('#myPostTable thead tr .chkBoxTh').remove();\n");
      out.write("			$('#myPostTable tbody tr .myPostChkBox').parents('td').remove();\n");
      out.write("		}\n");
      out.write("		//선택 >- 선택 해제\n");
      out.write("		function changeToDeselectMyPost(){\n");
      out.write("			$('#deleteMyPostBtn').attr('style','display:block');\n");
      out.write("			$('#myPostChkBoxBtn').attr('class','btn btn-secondary btn-sm');\n");
      out.write("			$('#myPostChkBoxBtn').text('선택 해제');\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("		</script>\n");
      out.write("	<!------------------------내가 쓴 글 태그 관련 스크립트 끝------------------------------------>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("								<!--내가 쓴 글 내용 구역 끝-->\n");
      out.write("\n");
      out.write("								<!--내가 쓴 댓글 내용 구역-->\n");
      out.write("								");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<div class=\"tab-pane fade profile-edit pt-3\" id=\"profile-comment\">\n");
      out.write("		<div id=\"myComment-header\">\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<h5 class=\"card-title\">내가 쓴 댓글</h5>\n");
      out.write("				<div class=\"search\">\n");
      out.write("				  <input type=\"text\" class=\"search-input\" id=\"myCommentSearchInput\" placeholder=\"내용으로 검색\">\n");
      out.write("				  <img class=\"search-icon\" src=\"https://s3.ap-northeast-2.amazonaws.com/cdn.wecode.co.kr/icon/search.png\">\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"flexDiv\">\n");
      out.write("				<button id=\"myCommentChkBoxBtn\" class=\"btn btn-primary btn-sm\" style=\"display:none\">선택</button>\n");
      out.write("				<button id=\"deleteMyCommentBtn\" class=\"btn btn-danger btn-sm\" style=\"display:none\">삭제</button>	\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("	      	<div class=\"table-container\">\n");
      out.write("		      <table class=\"table table-dark table-hover myTable\" id=\"myCommentTable\">\n");
      out.write("					<colgroup>\n");
      out.write("					      <col width=\"5%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"30%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					      <col width=\"10%\" />\n");
      out.write("					</colgroup>\n");
      out.write("					<thead>\n");
      out.write("						\n");
      out.write("						<tr>\n");
      out.write("							<th>번호</th>\n");
      out.write("							<th>카테고리</th>\n");
      out.write("							<th>내용</th>\n");
      out.write("							<th>작성자</th>\n");
      out.write("							<th>작성일</th>\n");
      out.write("							<th>원글 제목</th>\n");
      out.write("\n");
      out.write("						</tr>\n");
      out.write("					</thead>\n");
      out.write("					<tbody>\n");
      out.write("					\n");
      out.write("					</tbody>\n");
      out.write("					<tfoot>\n");
      out.write("					\n");
      out.write("					</tfoot>\n");
      out.write("				</table>\n");
      out.write("			</div>\n");
      out.write("	</div>\n");
      out.write("	<!------------------------내가 쓴 댓글 태그 관련 스크립트 시작------------------------------------>\n");
      out.write("	<script>\n");
      out.write("		//내가 쓴 댓글 탭 클릭 이벤트\n");
      out.write("		$(\"#myCommentTab\").click(function(){   \n");
      out.write("		    $.ajax({\n");
      out.write("		        url: \"myCommentList.my\",\n");
      out.write("		        data:{\n");
      out.write("		            mno: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("		        },\n");
      out.write("		        success : function(result){\n");
      out.write("		        	resetCommentTable();\n");
      out.write("		        	changeToSelectMyComment();            \n");
      out.write("		            //내가 쓴 게시글이 존재한다면\n");
      out.write("		            if(result.length>0){\n");
      out.write("		            	$('#myCommentChkBoxBtn').attr('style','display:block');\n");
      out.write("		            	appendToCommentTable(result);\n");
      out.write("		            } else {\n");
      out.write("		            	//내가 쓴 게시글이 존재하지 않는다면\n");
      out.write("		            	$('#myCommentChkBoxBtn').attr('style','display:none');\n");
      out.write("		                var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"내가 쓴 댓글이 존재하지 않습니다.\"));\n");
      out.write("		                $(\"#myCommentTable>tfoot\").append(tr);\n");
      out.write("		            }\n");
      out.write("		            \n");
      out.write("		        \n");
      out.write("		        },\n");
      out.write("		        error : function(){\n");
      out.write("		            console.log(\"내가 쓴 댓글 탭 클릭 이벤트 실패\");\n");
      out.write("		        }\n");
      out.write("		    });  \n");
      out.write("		});\n");
      out.write("		//내가 쓴 댓글 tr 클릭 이벤트\n");
      out.write("		$(\"#myCommentTable>tbody\").on(\"click\",\"tr td.title\",function(){\n");
      out.write("			var parentTr = $(this).closest('tr');\n");
      out.write("			//게시판 상세보기로 이동하도록\n");
      out.write("	        //parentTr.children().first().text() -> 클릭된 행중 첫번째 요소(폴더 or 게시글 번호)\n");
      out.write("	        location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/detail.bo?postNo=\"+parentTr.children().first().text();\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		//내가 쓴 댓글 테이블 체크박스 생성하는 버튼\n");
      out.write("		$('#myCommentChkBoxBtn').click(function() {\n");
      out.write("			if (($('#myCommentTable').find('.myCommentChkBox').length === 0) && $('#myCommentChkBoxBtn').text() == \"선택\") {\n");
      out.write("				changeToDeselectMyComment();\n");
      out.write("				$('#myCommentTable thead tr').append('<th class=\"chkBoxTh\">선택</th>');\n");
      out.write("				$('#myCommentTable tbody tr').each(function() {\n");
      out.write("                    $(this).append('<td class=\"tdForChkBox\"><input type=\"checkbox\" name=\"\" class=\"myCommentChkBox\"></td>');\n");
      out.write("            	});\n");
      out.write("            } else {\n");
      out.write("            	changeToSelectMyComment();\n");
      out.write("            }\n");
      out.write("        });\n");
      out.write("		\n");
      out.write("    	\n");
      out.write("		//내가 쓴 댓글 삭제 \n");
      out.write("		$('#deleteMyCommentBtn').click(function(){\n");
      out.write("			if($(\".myCommentChkBox:checked\").length>0){\n");
      out.write("				if(confirm(\"정말로 삭제하시겠습니까?\")){\n");
      out.write("					//체크된 게시글 번호를 담을 배열\n");
      out.write("					var commentNoArr = [];\n");
      out.write("					//likeChkBox라는 클래스이름을 가진 chkBox중 체크 된것들 반복\n");
      out.write("					$(\".myCommentChkBox:checked\").each(function(index,element){\n");
      out.write("						commentNoArr.push($(element).closest('tr').find('th:first-child').text());\n");
      out.write("					});\n");
      out.write("					\n");
      out.write("					$.ajax({\n");
      out.write("						url:\"myCommentDelete.my\",\n");
      out.write("						data:{\n");
      out.write("							mno : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\",\n");
      out.write("							commentNoArr : commentNoArr\n");
      out.write("						},\n");
      out.write("					\n");
      out.write("						async : false,\n");
      out.write("						success : function(result){\n");
      out.write("							console.log(\"통신 성공\");\n");
      out.write("							if(result == \"success\"){\n");
      out.write("								$(\"#myCommentTab\").click();\n");
      out.write("								alert(\"삭제 성공\");\n");
      out.write("								\n");
      out.write("							}else {\n");
      out.write("								alert(\"삭제 실패\");\n");
      out.write("							}\n");
      out.write("						},\n");
      out.write("						error : function(){\n");
      out.write("							console.log(\"내가 쓴 댓글 삭제 통신 실패\");\n");
      out.write("						}\n");
      out.write("					});\n");
      out.write("				} \n");
      out.write("			}else {\n");
      out.write("				alert(\"삭제할 댓글을 선택해주세요.\");\n");
      out.write("			}	\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		//검색창 입력 이벤트\n");
      out.write("		$(function () {\n");
      out.write("			var timeout = null; // 타이핑이 멈춘 후 대기 시간을 저장할 변수\n");
      out.write("			\n");
      out.write("			$(\"#myCommentSearchInput\").keyup(function(){\n");
      out.write("			   clearTimeout(timeout); // 기존 타이머를 취소\n");
      out.write("			\n");
      out.write("			   timeout = setTimeout(function () {\n");
      out.write("					// 1초 이후에 실행할 함수를 여기에 작성\n");
      out.write("					console.log($(\"#myCommentSearchInput\").val());\n");
      out.write("					var inputData = $(\"#myCommentSearchInput\").val();\n");
      out.write("					if(inputData == \"\"){\n");
      out.write("						$(\"#myCommentTab\").click();\n");
      out.write("					} else {\n");
      out.write("						$.ajax({\n");
      out.write("							url:\"searchMyComment.my\",\n");
      out.write("							data:{\n");
      out.write("								inputData: inputData,\n");
      out.write("								mno:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("							},\n");
      out.write("							success:function(result){\n");
      out.write("								resetCommentTable();\n");
      out.write("								changeToSelectMyComment();\n");
      out.write("								if(result.length !=0){\n");
      out.write("									appendToCommentTable(result);\n");
      out.write("								} else{\n");
      out.write("									//보여줄 폴더나 게시글이 존재하지 않는다면\n");
      out.write("							        $('#myCommentChkBoxBtn').attr('style','display:none');\n");
      out.write("							        var tr = $(\"<tr></tr>\").append($(\"<td colspan='6'></td>\").text(\"검색결과에 일치하는 댓글이 존재하지 않습니다.\"));\n");
      out.write("							        $(\"#myCommentTable>tfoot\").append(tr);\n");
      out.write("								}\n");
      out.write("								\n");
      out.write("							},\n");
      out.write("							error:function(){\n");
      out.write("								console.log(\"검색창 입력 이벤트 통신 실패\");\n");
      out.write("							}\n");
      out.write("						});\n");
      out.write("					}\n");
      out.write("			   }, 800);\n");
      out.write("			 });\n");
      out.write("	    }); \n");
      out.write("		//테이블에 댓글 넣는 반복문 함수\n");
      out.write("		function appendToCommentTable(result){\n");
      out.write("			for(var i=0; i<result.length;i++){\n");
      out.write("                var tr = $(\"<tr></tr>\");\n");
      out.write("                var commentNo = $(\"<th></th>\").text(result[i].commentNo);\n");
      out.write("                var category = $(\"<td></td>\").text(result[i].categoryName);\n");
      out.write("                var content = $(\"<td class='title'></td>\").text(result[i].content);\n");
      out.write("                var writer = $(\"<td></td>\").text(result[i].writerNo);\n");
      out.write("                var date = $(\"<td></td>\").text(result[i].commentDate);\n");
      out.write("                var postTitle = $(\"<td></td>\").text(result[i].postTitle);\n");
      out.write("                tr.append(commentNo,category,content,writer,date,postTitle);\n");
      out.write("                $(\"#myCommentTable>tbody\").append(tr);\n");
      out.write("           	}\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//삭제버튼, 선택해제버튼, 테이블 내 '선택' th 숨기기 (탭 이동이 있을 시 없애지 않으면 남아있음)\n");
      out.write("		function removeCommentChkThDeleteClearBtn(){\n");
      out.write("			$('#myCommentTable thead tr .chkBoxTh').remove();\n");
      out.write("            $('#deleteMyCommentBtn').attr('style','display:none');\n");
      out.write("			$('#clearMyCommentChkBoxBtn').attr('style','display:none');\n");
      out.write("		}\n");
      out.write("		//테이블 비우기\n");
      out.write("		function resetCommentTable(){\n");
      out.write("			 $(\"#myCommentTable>tbody\").empty();\n");
      out.write("	         $(\"#myCommentTable>tfoot\").empty();\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		//선택 해제 -> 선택\n");
      out.write("		function changeToSelectMyComment(){\n");
      out.write("			$('#deleteMyCommentBtn').attr('style','display:none');\n");
      out.write("			$('#myCommentChkBoxBtn').attr('class','btn btn-primary btn-sm');\n");
      out.write("			$('#myCommentChkBoxBtn').text('선택');\n");
      out.write("			$('#myCommentTable thead tr .chkBoxTh').remove();\n");
      out.write("			$('#myCommentTable tbody tr .myCommentChkBox').parents('td').remove();\n");
      out.write("		}\n");
      out.write("		//선택 >- 선택 해제\n");
      out.write("		function changeToDeselectMyComment(){\n");
      out.write("			$('#deleteMyCommentBtn').attr('style','display:block');\n");
      out.write("			$('#myCommentChkBoxBtn').attr('class','btn btn-secondary btn-sm');\n");
      out.write("			$('#myCommentChkBoxBtn').text('선택 해제');\n");
      out.write("			\n");
      out.write("		}\n");
      out.write("	</script>\n");
      out.write("	<!------------------------내가 쓴 댓글 태그 관련 스크립트 끝------------------------------------>\n");
      out.write("</body>\n");
      out.write("</html>");
      out.write("\n");
      out.write("								<!--내가 쓴 댓글 내용 구역 끝-->\n");
      out.write("\n");
      out.write("\n");
      out.write("								<!--비밀번호 변경 내용 구역-->\n");
      out.write("								<div class=\"tab-pane fade pt-3\" id=\"profile-change-password\">\n");
      out.write("									<!-- 비밀번호 변경 Form -->\n");
      out.write("									<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/memberPwdUpdate.my?mno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" method=\"post\">\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"pwd\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">현재 비밀번호</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"pwd\" type=\"password\" class=\"form-control\"\n");
      out.write("													id=\"pwd\" minlength=\"4\" required>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"newPwd\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">새로운 비밀번호</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"newPwd\" type=\"password\"\n");
      out.write("													class=\"form-control\" id=\"newPwd\" minlength=\"4\" required>\n");
      out.write("											</div>\n");
      out.write("											<p style=\"margin-top: 5px; color:red;\">4자 이상 입력</p>\n");
      out.write("										</div>\n");
      out.write("\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"reNewPwd\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">새로운 비밀번호 확인</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"reNewPwd\" type=\"password\"\n");
      out.write("													class=\"form-control\" id=\"reNewPwd\" minlength=\"4\" required>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("\n");
      out.write("										<div class=\"text-center\">\n");
      out.write("											<button type=\"submit\" class=\"btn btn-primary btn-sm\" onclick=\"return chkEquealNewPwd();\">비밀번호 변경</button>\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("									<script>\n");
      out.write("										function chkEquealNewPwd(){\n");
      out.write("											if($(newPwd).val() != $(reNewPwd).val()){\n");
      out.write("												alert(\"새로운 비밀번호 확인을 다시한번 확인해주세요.\");\n");
      out.write("												return false;\n");
      out.write("											} else {\n");
      out.write("												return true;\n");
      out.write("											}\n");
      out.write("										}\n");
      out.write("									</script>\n");
      out.write("								</div>\n");
      out.write("								<!--비밀번호 변경 내용 구역 끝-->\n");
      out.write("								<!--회원탈퇴 내용 구역-->\n");
      out.write("								<div class=\"tab-pane fade pt-3\" id=\"profile-delete_member\">\n");
      out.write("									<!-- 회원탈퇴 Form -->\n");
      out.write("									<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/memberDelete.my?mno=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" method=\"post\">\n");
      out.write("										<div class=\"row mb-3\">\n");
      out.write("											<label for=\"pwd\"\n");
      out.write("												class=\"col-md-4 col-lg-3 col-form-label\">현재 비밀번호</label>\n");
      out.write("											<div class=\"col-md-8 col-lg-9\">\n");
      out.write("												<input name=\"pwd\" type=\"password\" class=\"form-control\"\n");
      out.write("													id=\"pwd\" minlength=\"4\" required>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("										<div class=\"text-center\">\n");
      out.write("											<button type=\"button\" class=\"btn btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#deleteMemModal\">회원탈퇴</button>\n");
      out.write("										</div>\n");
      out.write("									\n");
      out.write("										<div class=\"modal fade\" id=\"deleteMemModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("											<div>\n");
      out.write("											  <div class=\"modal-dialog\">\n");
      out.write("											    <div class=\"modal-content\">\n");
      out.write("											      <div class=\"modal-header\">\n");
      out.write("											        <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">회원 탈퇴</h1>\n");
      out.write("											        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("											      </div>\n");
      out.write("											      <div class=\"modal-body\">\n");
      out.write("											        <p style=\"color:red;\">정말로 탈퇴하시겠습니까?</p>\n");
      out.write("											      </div>\n");
      out.write("											      <div class=\"modal-footer\">\n");
      out.write("											        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">닫기</button>\n");
      out.write("											        <button type=\"submit\" class=\"btn btn-danger\">회원 탈퇴</button>\n");
      out.write("											      </div>\n");
      out.write("											    </div>\n");
      out.write("											  </div>\n");
      out.write("											</div>\n");
      out.write("										</div>\n");
      out.write("\n");
      out.write("									</form>\n");
      out.write("									\n");
      out.write("								</div>\n");
      out.write("								\n");
      out.write("								\n");
      out.write("								<!--회원탈퇴 내용 구역 끝-->\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<!--우측 card 구역 끝-->\n");
      out.write("			</div>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("		</section>\n");
      out.write("\n");
      out.write("	</main>\n");
      out.write("	\n");
      out.write("	<!-- End #main -->\n");
      out.write("\n");
      out.write("	<!-- ======= Footer ======= -->\n");
      out.write("	<footer id=\"footer\" class=\"footer\">\n");
      out.write("		<div class=\"copyright\">\n");
      out.write("			&copy; Copyright <strong><span>NiceAdmin</span></strong>. All Rights\n");
      out.write("			Reserved\n");
      out.write("		</div>\n");
      out.write("		<div class=\"credits\">\n");
      out.write("			Designed by <a href=\"https://bootstrapmade.com/\">BootstrapMade</a>\n");
      out.write("		</div>\n");
      out.write("	</footer>\n");
      out.write("	<!-- End Footer -->\n");
      out.write("\n");
      out.write("	<a href=\"#\"\n");
      out.write("		class=\"back-to-top d-flex align-items-center justify-content-center\"><i\n");
      out.write("		class=\"bi bi-arrow-up-short\"></i></a>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /views/mypage/../common/menubar.jsp(287,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /views/mypage/../common/menubar.jsp(287,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/views/mypage/../common/menubar.jsp(287,1) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /views/mypage/../common/menubar.jsp(289,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.deleteMemAlert}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<script>\r\n");
          out.write("    		alert(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.deleteMemAlert}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("    		");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("    	</script>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /views/mypage/../common/menubar.jsp(292,6) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("deleteMemAlert");
      // /views/mypage/../common/menubar.jsp(292,6) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /views/mypage/../common/menubar.jsp(391,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.grade eq '관리자'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div class=\"dropdown_king nav_item\">\r\n");
          out.write("						<a href=\"#\">관리자</a>\r\n");
          out.write("						<div class=\"dropdown_main\">\r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/selectUser.ad?currentPage=1\">\r\n");
          out.write("								<div>관리자페이지</div>\r\n");
          out.write("							</a> \r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/category.ad\">\r\n");
          out.write("								<div>카테고리</div>\r\n");
          out.write("							</a> \r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/disable.ad\">\r\n");
          out.write("								<div>정지회원</div>\r\n");
          out.write("							</a>\r\n");
          out.write("						</div>\r\n");
          out.write("					</div>				\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /views/mypage/myPage.jsp(317,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.myAlertMsg}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\n");
          out.write("    	<script>\n");
          out.write("    		alert(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.myAlertMsg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\n");
          out.write("    	</script>\n");
          out.write("    	");
          if (_jspx_meth_c_005fremove_005f1(_jspx_th_c_005fif_005f2, _jspx_page_context))
            return true;
          out.write("\n");
          out.write("    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f2, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f1 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f1_reused = false;
    try {
      _jspx_th_c_005fremove_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f2);
      // /views/mypage/myPage.jsp(321,5) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f1.setVar("myAlertMsg");
      // /views/mypage/myPage.jsp(321,5) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f1.setScope("session");
      int _jspx_eval_c_005fremove_005f1 = _jspx_th_c_005fremove_005f1.doStartTag();
      if (_jspx_th_c_005fremove_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f1);
      _jspx_th_c_005fremove_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f1_reused);
    }
    return false;
  }
}
