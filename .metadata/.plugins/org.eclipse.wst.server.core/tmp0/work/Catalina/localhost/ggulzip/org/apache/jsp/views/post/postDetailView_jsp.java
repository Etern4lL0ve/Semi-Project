/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2023-11-16 02:55:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.post;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gz.member.model.vo.Member;

public final class postDetailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1699588138000L));
    _jspx_dependants.put("/views/common/menubar.jsp", Long.valueOf(1700048196000L));
    _jspx_dependants.put("jar:file:/D:/GgulZip/GgulZip/src/main/webapp/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.gz.member.model.vo.Member");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write(".outer table {\r\n");
      out.write("	border-color: black;\r\n");
      out.write("	color: black;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@font-face {\r\n");
      out.write("	font-family: 'TheJamsil5Bold';\r\n");
      out.write("	src:\r\n");
      out.write("		url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2302_01@1.0/TheJamsil5Bold.woff2')\r\n");
      out.write("		format('woff2');\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@font-face {\r\n");
      out.write("	font-family: 'GmarketSansMedium';\r\n");
      out.write("	src:\r\n");
      out.write("		url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2001@1.1/GmarketSansMedium.woff')\r\n");
      out.write("		format('woff');\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table#detail-area th, table#detail-area td {\r\n");
      out.write("	padding: 5px 0; /* 위아래 여백을 조절하려면 해당 값을 조정하세요 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#reply-area .btn {\r\n");
      out.write("	background-color: rgb(241, 205, 27);\r\n");
      out.write("	margin-top: -5px;\r\n");
      out.write("	width: 80px;\r\n");
      out.write("	height: 80px;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#fixed-header {\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	z-index: 100;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#reply-area {\r\n");
      out.write("    width: 100%; \r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#reply-area{\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	float: left;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("}\r\n");
      out.write("#reply-area table{\r\n");
      out.write("  margin-bottom: 80px;\r\n");
      out.write("}\r\n");
      out.write("    #reply-area textarea {\r\n");
      out.write("      display: block;\r\n");
      out.write("      width: 500px; /* 기존 가로 크기 유지 */\r\n");
      out.write("      margin-left: auto;\r\n");
      out.write("      margin-right: auto;\r\n");
      out.write("      margin-top: 20px; /* 원하는 상하 여백 값으로 조정 */\r\n");
      out.write("      margin-bottom: 20px; /* 원하는 상하 여백 값으로 조정 */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("/* \r\n");
      out.write("#reply-area td {\r\n");
      out.write("	padding: 0; 수정: 더 적은 여백으로 조절 \r\n");
      out.write("}\r\n");
      out.write("*/\r\n");
      out.write("\r\n");
      out.write(".btn {\r\n");
      out.write("	width: 80px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write(".detailContainer{\r\n");
      out.write("	justify-content:center;\r\n");
      out.write("	width: 1050px;\r\n");
      out.write("	margin:0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".button1 {\r\n");
      out.write("		border: 2px solid rgb(255, 225, 77);\r\n");
      out.write("		padding: 10px 20px;\r\n");
      out.write("		height : 45px;\r\n");
      out.write("		background-color: rgb(255, 225, 77);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button1:hover {\r\n");
      out.write("		background-color: rgb(251, 236, 152);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button2 {\r\n");
      out.write("		border: 2px solid rgb(249, 219, 150);\r\n");
      out.write("		padding: 10px 20px;\r\n");
      out.write("		height : 45px;\r\n");
      out.write("		background-color: rgb(249, 219, 150);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button2:hover {\r\n");
      out.write("		background-color: rgb(252, 233, 202);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button3 {\r\n");
      out.write("		border: 2px solid rgb(252, 147, 139);\r\n");
      out.write("		padding: 10px 20px;\r\n");
      out.write("		height : 45px;\r\n");
      out.write("		background-color: rgb(252, 147, 139);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.button3:hover {\r\n");
      out.write("		background-color: rgb(252, 171, 167);\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#commentContent {\r\n");
      out.write("	    width: 300px; /* 원하는 가로 크기로 설정 */\r\n");
      out.write("	    height: 100px; /* 원하는 세로 크기로 설정 */\r\n");
      out.write("	    resize: none; /* 사용자가 크기를 조절하지 못하도록 설정 */\r\n");
      out.write("	}\r\n");
      out.write("		\r\n");
      out.write("/* #3btn { */\r\n");
      out.write("/*     border: none; */\r\n");
      out.write("/*     background-color :rgb(255, 227, 84); */\r\n");
      out.write("    \r\n");
      out.write("/* } */\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");

//ContextRoot(ContextPath)를 꺼내놓기 (메소드를 이용하여)
String contextPath = request.getContextPath();
//로그인 정보 꺼내놓기 
//session객체에 loginUser 객체와 alertMsg 메세지를 담아놓음 
Member loginMember = (Member) session.getAttribute("loginMember");
String alertMsg = (String) session.getAttribute("alertMsg");
//로그인 전 menubar.jsp 로딩되면 loginUser == null
//로그인 후 menubar.jsp 로딩되면 로그인한 회원정보담긴 Member객체
//로그인 전 menubar.jsp 로딩되면 alertMsg == null
//로그인 후 menubar.jsp 로딩되면 alertMsg == 성공메세지 

//쿠키정보(쿠키 배열)
Cookie[] cookies = request.getCookies();

//쿠키배열에서 필요한 쿠키정보를 추출하기 
//반복으로 돌려서 해당 쿠키의 이름을 찾고 그 쿠키의 값을 담아두기 
String saveId = "";
if (cookies != null) {
	for (Cookie c : cookies) {

		if ((c.getName()).equals("memberId")) {
	saveId = c.getValue();
		}
	}
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<!-- Vendor CSS Files -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<!-- Vendor JS Files -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("	integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("	crossorigin=\"anonymous\"></script>\r\n");
      out.write("<!-- jQuery library -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<!-- Popper JS -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(":root{\r\n");
      out.write("	--maincolor :#f1cd1b; <!--노란색-->\r\n");
      out.write("}\r\n");
      out.write(".nav-area {\r\n");
      out.write("	background-color: #ffe14d;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	height: 50px;\r\n");
      out.write("	width: 150px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	line-height: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".menu a:hover {\r\n");
      out.write("	background-color: #ccb020;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@font-face {\r\n");
      out.write("	font-family: 'SEBANG_Gothic_Bold';\r\n");
      out.write("	src:\r\n");
      out.write("		url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_2104@1.0/SEBANG_Gothic_Bold.woff')\r\n");
      out.write("		format('woff');\r\n");
      out.write("	font-weight: normal;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#login-form button {\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	background-color: rgb(255, 219, 41);\r\n");
      out.write("	border: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rectangle {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 0.5px;\r\n");
      out.write("	background-color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 드롭다운 스타일*/\r\n");
      out.write(".nav_main {\r\n");
      out.write("	font-weight: 900;\r\n");
      out.write("	font-size: 1.1rem;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: row;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	padding: 0 12px 0 12px;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	right: 0;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	flex: 0 0 auto;\r\n");
      out.write("	margin: 0 3rem;\r\n");
      out.write("	font-weight:900;\r\n");
      out.write("	padding-top:2rem;\r\n");
      out.write("	padding-bottom:2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item>a {\r\n");
      out.write("	color: #000000;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item>a:after {\r\n");
      out.write("	content: '';\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	left: 50%;\r\n");
      out.write("	top: -2px;\r\n");
      out.write("	width: 0;\r\n");
      out.write("	height: 2px;\r\n");
      out.write("	background-color: #000000;\r\n");
      out.write("	transition: width 0.2s ease-in-out;\r\n");
      out.write("	transform: translateX(-50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".nav_item:hover>a:after {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	display: block;\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	background-color: #fffafa;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	top: 3.9rem;\r\n");
      out.write("	right: 0rem;\r\n");
      out.write("	width: 11rem;\r\n");
      out.write("	border: 1px solid rgb(99, 96, 96);\r\n");
      out.write("	box-shadow: 0 40px 40px rgb(0 0 0/ 6%);\r\n");
      out.write("	opacity: 0;\r\n");
      out.write("	visibility: hidden;\r\n");
      out.write("	transform: translateY(-10px);\r\n");
      out.write("	transition: transform 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a {\r\n");
      out.write("	display: block;\r\n");
      out.write("	color: #000000;\r\n");
      out.write("	font-weight: 400;\r\n");
      out.write("	font-size: 1rem;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a div {\r\n");
      out.write("	padding: 0.5rem 0rem 0.5rem 0.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_king:hover .dropdown_main {\r\n");
      out.write("	opacity: 1;\r\n");
      out.write("	visibility: visible;\r\n");
      out.write("	transform: translateY(0);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dropdown_main a:hover {\r\n");
      out.write("	background-color: #c9cac9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("<!--메뉴바 탑 헤더-->\r\n");
      out.write(".menubarTopHeader {\r\n");
      out.write("\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header{\r\n");
      out.write("       display:flex;\r\n");
      out.write("       flex-direction: column;\r\n");
      out.write("       align-items: center;\r\n");
      out.write("       justify-content: center;\r\n");
      out.write("       width: 100%\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("header.active {\r\n");
      out.write("    margin-bottom: 80px\r\n");
      out.write("}\r\n");
      out.write("header #sub{\r\n");
      out.write("	position: relative;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: flex-end;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    border-bottom: 1px solid var(--alpha-10);\r\n");
      out.write("}\r\n");
      out.write("header #sub .login-area{\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 10px;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: end;\r\n");
      out.write("    width: 1050px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("}\r\n");
      out.write("header #main {\r\n");
      out.write("       display: flex;\r\n");
      out.write("       align-items: center;\r\n");
      out.write("       justify-content: center;\r\n");
      out.write("       width: 1050px;\r\n");
      out.write("       padding: 0;\r\n");
      out.write("       margin: 15px 0\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("header #main>div {\r\n");
      out.write("    flex: 1\r\n");
      out.write("}\r\n");
      out.write("header #main .logo {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("\r\n");
      out.write("    font-size: 3em;\r\n");
      out.write("    font-weight: 700\r\n");
      out.write("}\r\n");
      out.write("header #main .logo div {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("    font-family: GangwonEduPowerExtraBoldA,sans-serif\r\n");
      out.write("}\r\n");
      out.write("header #main .logo div:hover {\r\n");
      out.write("    cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("header #nav {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    background-color: rgb(241, 205, 27);\r\n");
      out.write("    width:1050px;\r\n");
      out.write("    height:50px;\r\n");
      out.write("    \r\n");
      out.write("}\r\n");
      out.write("header nav{\r\n");
      out.write("	 display: flex;\r\n");
      out.write("      flex-wrap: wrap;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      justify-content: start;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-info a{\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!--jstl 방식으로 contextPath를 다시 선언해주어야 jstl방식으로 contextPath를 이용해야한다. -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fset_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	<!-- 회원 탈퇴시 받을 메시지 확인 -->\r\n");
      out.write("	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("		var msg = '");
      out.print(alertMsg);
      out.write("'; //이건 가능 (문자열 처리해주기[값자체로 나옴])\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		if(msg != 'null'){ \r\n");
      out.write("			alert(msg);\r\n");
      out.write("			");
session.removeAttribute("alertMsg");
      out.write("\r\n");
      out.write("		}		\r\n");
      out.write("		\r\n");
      out.write("		$(function(){\r\n");
      out.write("			\r\n");
      out.write("			//쿠키 아이디값 가져오기\r\n");
      out.write("			\r\n");
      out.write("			var saveId = \"");
      out.print(saveId);
      out.write("\";\r\n");
      out.write("			\r\n");
      out.write("			if(saveId!=\"\"){\r\n");
      out.write("				$(\"input[name=memberId]\").val(saveId);\r\n");
      out.write("				$(\"input[name=saveId]\").attr(\"checked\",true);\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("	<header>\r\n");
      out.write("		<section id=\"sub\">\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("			<div class=\"login-area\">\r\n");
      out.write("				");
      //  c:choose
      org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
      boolean _jspx_th_c_005fchoose_005f0_reused = false;
      try {
        _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fchoose_005f0.setParent(null);
        int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
        if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					");
            //  c:when
            org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
            boolean _jspx_th_c_005fwhen_005f0_reused = false;
            try {
              _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              // /views/common/menubar.jsp(329,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
              _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginMember}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
              int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
              if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("						<button onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/chat/Chat.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 10px;\">익명 채팅방</button>\r\n");
                  out.write("						<button\r\n");
                  out.write("							onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/member/Login.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 10px;\">로그인</button>\r\n");
                  out.write("						<button\r\n");
                  out.write("							onclick='window.location.href = \"");
                  out.print(request.getContextPath());
                  out.write("/views/member/memberEnrollForm.jsp\";'\r\n");
                  out.write("							style=\"border: none; background: none; margin-right: 20px;\">회원가입</button>\r\n");
                  out.write("					");
                  int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
              _jspx_th_c_005fwhen_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
            }
            out.write("\r\n");
            out.write("					");
            //  c:otherwise
            org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
            boolean _jspx_th_c_005fotherwise_005f0_reused = false;
            try {
              _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
              _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
              int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
              if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
                do {
                  out.write("\r\n");
                  out.write("						<!--로그인 후 화면-->\r\n");
                  out.write("						<div class=\"user-info\">\r\n");
                  out.write("							<b>");
                  out.print(loginMember.getNickname());
                  out.write("님 환영합니다. &nbsp</b>\r\n");
                  out.write("							<a href=\"");
                  out.print(contextPath);
                  out.write("/myPage.me\">마이페이지</a> \r\n");
                  out.write("							<a href=\"");
                  out.print(contextPath);
                  out.write("/logout.me\">로그아웃</a>\r\n");
                  out.write("							\r\n");
                  out.write("						</div>\r\n");
                  out.write("					");
                  int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
                  if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
                    break;
                } while (true);
              }
              if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
                return;
              }
              _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
              _jspx_th_c_005fotherwise_005f0_reused = true;
            } finally {
              org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
            }
            out.write("\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
        _jspx_th_c_005fchoose_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
      }
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		\r\n");
      out.write("		</section>\r\n");
      out.write("		<section id=\"main\">\r\n");
      out.write("			<div class=\"logo\">\r\n");
      out.write("				<br>\r\n");
      out.write("				<div id=\"home\">\r\n");
      out.write("					<h2\r\n");
      out.write("						style=\"font-size: 48px; font-weight: bold; color: rgb(241, 205, 27); font-family: SEBANG_Gothic_Bold; display: inline;\">\r\n");
      out.write("						꿀.zip</h2>\r\n");
      out.write("					<img src=\"views/img/bee.png\" alt=\"Bee Image\" width=\"50\" height=\"50\"\r\n");
      out.write("						style=\"display: inline; margin-top: -15px\">\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</section>\r\n");
      out.write("		<section id=\"nav\">\r\n");
      out.write("			<nav>\r\n");
      out.write("				<!-- 1번 메뉴 링크 -->\r\n");
      out.write("				<div class=\"nav_item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/nlist.no?currentPage=1\">공지사항</a>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<div class=\"dropdown_king nav_item\">\r\n");
      out.write("					<a href=\"#\">게시판</a>\r\n");
      out.write("					<div class=\"dropdown_main\">\r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=꿀팁\">\r\n");
      out.write("							<div>꿀팁게시판</div>\r\n");
      out.write("						</a> \r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=자유\">\r\n");
      out.write("							<div>자유게시판</div>\r\n");
      out.write("						</a> \r\n");
      out.write("						<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/list.bo?currentPage=1&category=추천\">\r\n");
      out.write("							<div>추천게시판</div>\r\n");
      out.write("						</a>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				<div class=\"nav_item\">\r\n");
      out.write("					<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/complainList.bo?currentPage=1\">신고/건의</a>\r\n");
      out.write("				</div>\r\n");
      out.write("		\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("		</section>\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	\r\n");
      out.write("	</header>\r\n");
      out.write("	<br clear=\"both\">\r\n");
      out.write("	<!--float 해제 -->\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!--로그인 전 후 화면 나누기 -->\r\n");
      out.write("	<!--로그인 전 -->\r\n");
      out.write("	");

	if (loginMember == null) {
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("        	function enrollPage(){\r\n");
      out.write("        		//아래와 같이 작성하면 디렉토리 구조가 노출이 되니 보안에 취약할 수 있다. \r\n");
      out.write("        		//location.href=\"/jsp/views/member/memberEnrollForm.jsp\";\r\n");
      out.write("        		//때문에 간단한 페이지 이동요청도 servlet을 거쳐서 요청에대한 응답페이지를 돌려받자.\r\n");
      out.write("        		console.log(\"회원가입 클릭\");\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/enrollForm.me\";\r\n");
      out.write("        		\r\n");
      out.write("        	}\r\n");
      out.write("        	\r\n");
      out.write("        	function findidPage() {\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/findId.me\";\r\n");
      out.write("        	}\r\n");
      out.write("        \r\n");
      out.write("        	function findpwPage() {\r\n");
      out.write("        		location.href=\"");
      out.print(contextPath);
      out.write("/findPwd.me\";\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("\r\n");
      out.write("	");

	} else {
	
      out.write('\r');
      out.write('\n');
      out.write('	');

	}
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("    document.getElementById(\"home\").addEventListener(\"click\", function() {\r\n");
      out.write("        // 클릭 이벤트 처리\r\n");
      out.write("        window.location.href = \"");
      out.print(contextPath);
      out.write("\"; \r\n");
      out.write("        // 원하는 페이지로 이동\r\n");
      out.write("		});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("	<link rel=\"stylesheet\"\r\n");
      out.write("		href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"outer\">\r\n");
      out.write("		<br>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div class = \"detailContainer\">\r\n");
      out.write("			<h2 align=\"left\"\r\n");
      out.write("				style=\"width: 700px; margin:0 auto; font-size: 24px; font-family: TheJamsil5Bold\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\r\n");
      out.write("			<br>\r\n");
      out.write("			<table id=\"detail-area\" align=\"center\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th width=\"70\">번호</th>\r\n");
      out.write("					<td width=\"10\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<th width=\"100\">카테고리</th>\r\n");
      out.write("					<td width=\"150\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.categoryName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr style=\"border-bottom: 1px solid black;\">\r\n");
      out.write("					<th>작성자</th>\r\n");
      out.write("					<td width=\"100\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<th>조회수</th>\r\n");
      out.write("					<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.count }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<th>작성일</th>\r\n");
      out.write("					<td width=\"200\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr style=\"border-bottom: 1px solid black;\">\r\n");
      out.write("					<th>내용</th>\r\n");
      out.write("					<td colspan=\"5\">\r\n");
      out.write("						<p style=\"height: 200px; white-space: pre;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\r\n");
      out.write("					</td>\r\n");
      out.write("					\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th>사진</th>\r\n");
      out.write("					<td colspan=\"5\">\r\n");
      out.write("						");
      out.write(" \r\n");
      out.write("						\r\n");
      out.write("							");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("						<script>\r\n");
      out.write("						console.log(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${at.filePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${at.changeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("					</script>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr style=\"border-bottom: 1px solid black;\">\r\n");
      out.write("					<th width=\"100\">좋아요&nbsp<i class=\"bi bi-suit-heart-fill\"\r\n");
      out.write("						style=\"color: rgb(241, 205, 27);\"></i></th>\r\n");
      out.write("					<td id=\"likeCount\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.likeCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("					<th width=\"100\">관심&nbsp<i class=\"bi bi-bookmark\"\r\n");
      out.write("						style=\"color: rgb(241, 205, 27);\"></i></th>\r\n");
      out.write("					<td id=\"interestCount\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.interestCount}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			\r\n");
      out.write("			<br>\r\n");
      out.write("			");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<!-- 수정 삭제 목록으로 버튼 -->\r\n");
      out.write("			   <div align=\"center\" style = \"margin-left = 200\">\r\n");
      out.write("				    <!-- 현재 로그인된 유저의 아이디가 글 작성자와 동일하다면 -->\r\n");
      out.write("				    ");
      if (_jspx_meth_c_005fif_005f3(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("				    <button onclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${header.referer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\" class = \"button1\" ><b>목록가기</b></button>\r\n");
      out.write("				</div>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"reply-area\">\r\n");
      out.write("				<table  style = \"margin-left:-250px\">\r\n");
      out.write("					<thead>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th>\r\n");
      out.write("								<h6 align=\"center\" >\r\n");
      out.write("									<b style = \"margin-left:50px; font-size:18px\"><i class=\"bi bi-send\"></i>&nbsp;댓글</b>\r\n");
      out.write("								</h6>\r\n");
      out.write("							</th>\r\n");
      out.write("							\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>\r\n");
      out.write("            					<textarea id=\"commentContent\" rows=\"3\" cols=\"80\" style=\"min-width:auto; margin-left:521px; margin-top:-5px\"></textarea>\r\n");
      out.write("            						\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>\r\n");
      out.write("							  <button class=\"btn btn-outline-warning\" onclick=\"insertComment();\" style=\"margin-left: 950px; font-size: 16px; margin-top: -10px; margin-bottom: 30px; background-color: transparent; height: 40px; width: 70px;\">\r\n");
      out.write("								    <b>작성</b>\r\n");
      out.write("								</button>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>작성자</td>\r\n");
      out.write("							<td>내용</td>\r\n");
      out.write("							<td>작성일</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("			\r\n");
      out.write("			</div>\r\n");
      out.write("		\r\n");
      out.write("			<br>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<script>\r\n");
      out.write("		  $(function() {\r\n");
      out.write("		    selectCommentList(); // Call the function to load comments when the page loads\r\n");
      out.write("		  });\r\n");
      out.write("		\r\n");
      out.write("		</script>\r\n");
      out.write("		<script>\r\n");
      out.write("\r\n");
      out.write("		// 댓글목록 조회 함수\r\n");
      out.write("		function selectCommentList() {\r\n");
      out.write("		    $.ajax({\r\n");
      out.write("		    	url:\"commentList.po\",\r\n");
      out.write("				data : {postNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("				},\r\n");
      out.write("				type: \"post\",\r\n");
      out.write("		        success: function (result) {\r\n");
      out.write("		            var str = \"\";\r\n");
      out.write("		\r\n");
      out.write("		            if (result.length === 0) {\r\n");
      out.write("		                // 댓글이 없는 경우\r\n");
      out.write("		                str = \"<tr><td colspan='5'>댓글이 없습니다.</td></tr>\";\r\n");
      out.write("		            } else {\r\n");
      out.write("		                // 댓글이 있는 경우\r\n");
      out.write("		                for (var i in result) {\r\n");
      out.write("		                    str += \"<tr>\"\r\n");
      out.write("		                        + \"<td><i class='bi bi-person-fill'></i>&nbsp;\" + result[i].writerNo + \"</td>\"\r\n");
      out.write("		                        + \"<td><input type='text' value='\" + result[i].content + \"' style='width:400px; margin-left :-500px; margin-top:10px;font-size: 16px;'></td>\"\r\n");
      out.write("		                        + \"<td>\" + result[i].commentDate + \"</td>\"\r\n");
      out.write("		                        + \"<td>\";\r\n");
      out.write("		\r\n");
      out.write("		                    // 삭제 버튼 생성 부분에 조건 추가\r\n");
      out.write("		                    if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == \"admin\" || \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.nickname}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"==result[i].writerNo){\r\n");
      out.write("		                        str += '<button class=\"btn\" onclick=\"deleteComment(' + result[i].commentNo + ');\" style=\"background: none; color:red\">삭제</button>';\r\n");
      out.write("		                    }\r\n");
      out.write("		\r\n");
      out.write("		                    str += \"</td></tr>\";\r\n");
      out.write("		                }\r\n");
      out.write("		            }\r\n");
      out.write("		\r\n");
      out.write("		            $(\"#reply-area tbody\").html(str);\r\n");
      out.write("		\r\n");
      out.write("		            // 댓글을 업데이트한 후에 텍스트 영역 하단으로 스크롤\r\n");
      out.write("		            $(\"#reply-area\").scrollTop($(\"#reply-area\")[0].scrollHeight);\r\n");
      out.write("		        },\r\n");
      out.write("		        error: function () {\r\n");
      out.write("		            console.log(\"통신오류\");\r\n");
      out.write("		        }\r\n");
      out.write("		    });\r\n");
      out.write("		}\r\n");
      out.write("		// 댓글목록 수정 함수\r\n");
      out.write("			function insertComment(){\r\n");
      out.write("			    $.ajax({\r\n");
      out.write("			        url: \"insertComment.po\",\r\n");
      out.write("			        data: {\r\n");
      out.write("			            content: $(\"#commentContent\").val(),\r\n");
      out.write("			            postNo: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("			        },\r\n");
      out.write("			        type: \"post\",\r\n");
      out.write("			        success: function (result) {\r\n");
      out.write("			            if (result > 0) {\r\n");
      out.write("			                alert(\"댓글 작성 성공\");\r\n");
      out.write("			                // 추가된 댓글 목록 재조회 등 필요한 동작을 수행\r\n");
      out.write("			                $(\"#commentContent\").val(\"\");\r\n");
      out.write("			            } else {\r\n");
      out.write("			                console.log(\"댓글 작성 실패\");\r\n");
      out.write("			            }\r\n");
      out.write("			        },\r\n");
      out.write("			        error: function () {\r\n");
      out.write("			            console.log(\"통신 오류\");\r\n");
      out.write("			        }\r\n");
      out.write("			    });\r\n");
      out.write("			}\r\n");
      out.write("		</script>\r\n");
      out.write("\r\n");
      out.write("		<!-- 좋아요 기능 -->\r\n");
      out.write("		<!-- 좋아요 수를 쿠키에 저장 -->\r\n");
      out.write("		<script>\r\n");
      out.write("		  $(function() {\r\n");
      out.write("		    // checkLikeAndInterestStatus(); // 페이지 로딩 시 한 번만 호출하도록 변경\r\n");
      out.write("		    selectCommentList();\r\n");
      out.write("		    isLikeOn();\r\n");
      out.write("		    isInterestOn();\r\n");
      out.write("		  });\r\n");
      out.write("		  \r\n");
      out.write("		  //게시물을 조회했을 때 게시글 조회한 사용자가 이 게시글을 좋아요 했는지 안했는지 판단. 했으면 하트를 채워두고 안했으면 빈하트로\r\n");
      out.write("		  function isLikeOn(){\r\n");
      out.write("			  $.ajax({\r\n");
      out.write("				  url:\"isLike.po\",\r\n");
      out.write("				  data : {\r\n");
      out.write("					  postNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("			  		  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("				  },\r\n");
      out.write("				  success : function(result){\r\n");
      out.write("					  if(result === \"exist\"){\r\n");
      out.write("						   $(\"#likeButton>i\").removeClass('bi-heart');\r\n");
      out.write("					  		$(\"#likeButton>i\").addClass('bi-heart-fill');\r\n");
      out.write("					  }else{\r\n");
      out.write("						  $(\"#likeButton>i\").removeClass('bi-heart-fill');\r\n");
      out.write("					  	  $(\"#likeButton>i\").addClass('bi-heart');\r\n");
      out.write("					  }\r\n");
      out.write("					 \r\n");
      out.write("				  },\r\n");
      out.write("				  error : function(){\r\n");
      out.write("					  console.log(\"통신에러\");\r\n");
      out.write("				  }\r\n");
      out.write("				  \r\n");
      out.write("			  });\r\n");
      out.write("		  }\r\n");
      out.write("		  //게시물을 조회했을 때 게시글 조회한 사용자가 이 게시글을 관심표시를 했는지 안했는지 판단. 했으면 북마크 아이콘을 채워두고 안했으면 빈 북마크로\r\n");
      out.write("		  function isInterestOn(){\r\n");
      out.write("			  $.ajax({\r\n");
      out.write("				  url:\"isInterest.po\",\r\n");
      out.write("				  data : {\r\n");
      out.write("					  postNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("			  		  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("				  },\r\n");
      out.write("				  success : function(result){\r\n");
      out.write("					  if(result === \"exist\"){\r\n");
      out.write("						   $(\"#interestButton>i\").removeClass('bi-bookmarks');\r\n");
      out.write("					  		$(\"#interestButton>i\").addClass('bi-bookmarks-fill');\r\n");
      out.write("					  }else{\r\n");
      out.write("						  $(\"#interestButton>i\").removeClass('bi-bookmarks-fill');\r\n");
      out.write("					  	  $(\"#interestButton>i\").addClass('bi-bookmarks');\r\n");
      out.write("					  }\r\n");
      out.write("					 \r\n");
      out.write("				  },\r\n");
      out.write("				  error : function(){\r\n");
      out.write("					  console.log(\"통신에러\");\r\n");
      out.write("				  }\r\n");
      out.write("				  \r\n");
      out.write("			  });\r\n");
      out.write("		  }\r\n");
      out.write("	\r\n");
      out.write("		  // 좋아요 버튼 클릭 시\r\n");
      out.write("		  function increaseLikeCount() {\r\n");
      out.write("			  console.log($('#likeButton>i').hasClass('bi-heart-fill'));\r\n");
      out.write("			 //하트가 채워져있다면 (이미 좋아요를 한 글이라면)\r\n");
      out.write("				if ($('#likeButton>i').hasClass('bi-heart-fill')) {\r\n");
      out.write("					//하트가 빈하트라면 (좋아요를 안 한 글이라면)\r\n");
      out.write("					console.log(\"꽉찬 하트라면 눌리는 곳\");\r\n");
      out.write("					$.ajax({\r\n");
      out.write("				      url: \"deleteFromLikeTable.po\",\r\n");
      out.write("					      data: { \r\n");
      out.write("					    	  postNo: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("					    	  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("					    \r\n");
      out.write("					      },\r\n");
      out.write("					      success: function(result) {\r\n");
      out.write("					        if (result === \"success\") {\r\n");
      out.write("					          alert(\"좋아요를 해제하였습니다.\");\r\n");
      out.write("					          $(\"#likeButton>i\").removeClass('bi-heart-fill');\r\n");
      out.write("							  $(\"#likeButton>i\").addClass('bi-heart');\r\n");
      out.write("							  var likeCount = parseInt($(\"#likeCount\").text())-1;\r\n");
      out.write("							  console.log(\"likeCount : \"+likeCount);\r\n");
      out.write("							  $(\"#likeCount\").text(likeCount);\r\n");
      out.write("					       \r\n");
      out.write("					        } else {\r\n");
      out.write("					        	alert(\"실패\");\r\n");
      out.write("					        }\r\n");
      out.write("					      },\r\n");
      out.write("					      error: function() {\r\n");
      out.write("					        console.log(\"통신 오류\");\r\n");
      out.write("					      }\r\n");
      out.write("					    });\r\n");
      out.write("					  \r\n");
      out.write("					\r\n");
      out.write("				} else {\r\n");
      out.write("					console.log(\"빈하트라면 눌리는 곳\");\r\n");
      out.write("					//하트가 빈하트라면 (좋아요를 안 한 글이라면)\r\n");
      out.write("					 $.ajax({\r\n");
      out.write("					      url: \"insertToLikeTable.po\",\r\n");
      out.write("					      data: { \r\n");
      out.write("					    	  postNo: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("					    	  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("					    \r\n");
      out.write("					      },\r\n");
      out.write("					      success: function(result) {\r\n");
      out.write("					        if (result === \"success\") {\r\n");
      out.write("					          alert(\"좋아요를 눌렀습니다\");\r\n");
      out.write("					          $(\"#likeButton>i\").removeClass('bi-heart');\r\n");
      out.write("						  	  $(\"#likeButton>i\").addClass('bi-heart-fill');\r\n");
      out.write("						  	  var likeCount = parseInt($(\"#likeCount\").text())+1;\r\n");
      out.write("						  	  console.log(\"likeCount : \"+likeCount);\r\n");
      out.write("							  $(\"#likeCount\").text(likeCount);\r\n");
      out.write("					    \r\n");
      out.write("					        } else {\r\n");
      out.write("					        	alert(\"실패\");\r\n");
      out.write("					        }\r\n");
      out.write("					      },\r\n");
      out.write("					      error: function() {\r\n");
      out.write("					        console.log(\"통신 오류\");\r\n");
      out.write("					      }\r\n");
      out.write("					    });\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("		   \r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("		\r\n");
      out.write("		  // 관심 버튼 클릭 시\r\n");
      out.write("		\r\n");
      out.write("		  function increaseInterestCount() {\r\n");
      out.write("			  console.log($('#interestButton>i').hasClass('bi-bookmarks-fill'));\r\n");
      out.write("				 //북마크가 채워져있다면 (이미 관심표시를 한 글이라면)\r\n");
      out.write("					if ($('#interestButton>i').hasClass('bi-bookmarks-fill')) {\r\n");
      out.write("						console.log(\"꽉찬 북마크라면 눌리는 곳\");\r\n");
      out.write("						$.ajax({\r\n");
      out.write("					      url: \"deleteFromInterestTable.po\",\r\n");
      out.write("						      data: { \r\n");
      out.write("						    	  postNo: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("						    	  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("						    \r\n");
      out.write("						      },\r\n");
      out.write("						      success: function(result) {\r\n");
      out.write("						        if (result === \"success\") {\r\n");
      out.write("						          alert(\"관심을 해제하였습니다.\");\r\n");
      out.write("						          $(\"#interestButton>i\").removeClass('bi-bookmarks-fill');\r\n");
      out.write("								  $(\"#interestButton>i\").addClass('bi-bookmarks');\r\n");
      out.write("								  var interestCount = parseInt($(\"#interestCount\").text())-1;\r\n");
      out.write("							  	  console.log(\"interestCount : \"+interestCount);\r\n");
      out.write("							  	  $(\"#interestCount\").text(interestCount);\r\n");
      out.write("						          // 쿠키에 좋아요 수 저장 (이미 클릭한 경우도 저장해야 함)\r\n");
      out.write("						         \r\n");
      out.write("						        } else {\r\n");
      out.write("						        	alert(\"실패\");\r\n");
      out.write("						        }\r\n");
      out.write("						      },\r\n");
      out.write("						      error: function() {\r\n");
      out.write("						        console.log(\"통신 오류\");\r\n");
      out.write("						      }\r\n");
      out.write("						 });\r\n");
      out.write("						  \r\n");
      out.write("						\r\n");
      out.write("					} else {\r\n");
      out.write("						console.log(\"빈 북마크라면 눌리는 곳\");\r\n");
      out.write("						//북마크가 빈 북마크라면 (좋아요를 안 한 글이라면)\r\n");
      out.write("						 $.ajax({\r\n");
      out.write("						      url: \"insertToInterestTable.po\",\r\n");
      out.write("						      data: { \r\n");
      out.write("						    	  postNo: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(",\r\n");
      out.write("						    	  mno : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("						    \r\n");
      out.write("						      },\r\n");
      out.write("						      success: function(result) {\r\n");
      out.write("						        if (result === \"success\") {\r\n");
      out.write("						          alert(\"관심버튼을 눌렀습니다\");\r\n");
      out.write("						          $(\"#interestButton>i\").removeClass('bi-bookmarks');\r\n");
      out.write("							  	  $(\"#interestButton>i\").addClass('bi-bookmarks-fill');\r\n");
      out.write("							  	  var interestCount = parseInt($(\"#interestCount\").text())+1;\r\n");
      out.write("							  	  console.log(\"interestCount : \"+interestCount);\r\n");
      out.write("							  	  $(\"#interestCount\").text(interestCount);\r\n");
      out.write("						      \r\n");
      out.write("						        } else {\r\n");
      out.write("						        	alert(\"실패\");\r\n");
      out.write("						        }\r\n");
      out.write("						      },\r\n");
      out.write("						      error: function() {\r\n");
      out.write("						        console.log(\"통신 오류\");\r\n");
      out.write("						      }\r\n");
      out.write("						    });\r\n");
      out.write("					}\r\n");
      out.write("		  }\r\n");
      out.write("		  \r\n");
      out.write("		// 댓글 수정\r\n");
      out.write("	  function updateComment(el) {\r\n");
      out.write("		//번호 추출하기 (el은 클릭된 요소객체[this로 전달받음])\r\n");
      out.write("	    var commentNo = $(el).parents(\".zz\").children().eq(0).text();\r\n");
      out.write("	  	//내용 추출하기 (el은 클릭된 요소객체[this로 전달받음])\r\n");
      out.write("		var content = $(el).parents(\".zz\").find('input[type=text]').val();\r\n");
      out.write("	  	$.ajax({\r\n");
      out.write("	          url: \"updateComment.po\",\r\n");
      out.write("	          data: {\r\n");
      out.write("	              content: content,\r\n");
      out.write("	              commentNo: commentNo,\r\n");
      out.write("	              postNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("	          },\r\n");
      out.write("	          type: \"post\",\r\n");
      out.write("	          success: function (result) {\r\n");
      out.write("	              if (result > 0) {\r\n");
      out.write("	                  alert(\"댓글 수정 성공\");\r\n");
      out.write("	                  // 추가된 댓글 목록 재조회 등 필요한 동작을 수행\r\n");
      out.write("	                  $(\"#content\").val(\"\");\r\n");
      out.write("	                  selectCommentList(); // 댓글 목록을 다시 불러옴\r\n");
      out.write("	              } else {\r\n");
      out.write("	                  console.log(\"댓글 수정 실패\");\r\n");
      out.write("	              }\r\n");
      out.write("	          },\r\n");
      out.write("	          error: function () {\r\n");
      out.write("	              console.log(\"통신 오류\");\r\n");
      out.write("	          }\r\n");
      out.write("	      });\r\n");
      out.write("	  }\r\n");
      out.write("\r\n");
      out.write("	  // 댓글 삭제\r\n");
      out.write("	  function deleteComment(commentNo) {\r\n");
      out.write("	      console.log(\"클릭한 delete버튼의 no: \" + commentNo); // 로그 추가\r\n");
      out.write("\r\n");
      out.write("	      $.ajax({\r\n");
      out.write("	          url: \"deleteComment.po\",\r\n");
      out.write("	          data: {\r\n");
      out.write("	              commentNo: commentNo,\r\n");
      out.write("	              postNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("	          },\r\n");
      out.write("	          type: \"post\",\r\n");
      out.write("	          success: function (result) {\r\n");
      out.write("	              if (result > 0) {\r\n");
      out.write("	                  alert(\"댓글 삭제 성공\");\r\n");
      out.write("	                  // 삭제된 댓글 목록 재조회 등 필요한 동작을 수행\r\n");
      out.write("	                  selectCommentList(); // 댓글 목록을 다시 불러옴\r\n");
      out.write("	              } else {\r\n");
      out.write("	                  console.log(\"댓글 삭제 실패\");\r\n");
      out.write("	              }\r\n");
      out.write("	          },\r\n");
      out.write("	          error: function () {\r\n");
      out.write("	              console.log(\"통신 오류\");\r\n");
      out.write("	          }\r\n");
      out.write("	      });\r\n");
      out.write("	  }\r\n");
      out.write("	  \r\n");
      out.write("\r\n");
      out.write("		</script>\r\n");
      out.write("		<br><br><br>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fset_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:set
    org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
    boolean _jspx_th_c_005fset_005f0_reused = false;
    try {
      _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fset_005f0.setParent(null);
      // /views/common/menubar.jsp(287,1) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setVar("contextPath");
      // /views/common/menubar.jsp(287,1) name = value type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fset_005f0.setValue(new org.apache.jasper.el.JspValueExpression("/views/common/menubar.jsp(287,1) '${pageContext.request.contextPath }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${pageContext.request.contextPath }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
      if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fset_0026_005fvar_005fvalue_005fnobody.reuse(_jspx_th_c_005fset_005f0);
      _jspx_th_c_005fset_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /views/common/menubar.jsp(289,1) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty sessionScope.deleteMemAlert}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		<script>\r\n");
          out.write("    		alert(\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.deleteMemAlert}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\");\r\n");
          out.write("    		");
          if (_jspx_meth_c_005fremove_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("    	</script>\r\n");
          out.write("	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fremove_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:remove
    org.apache.taglibs.standard.tag.common.core.RemoveTag _jspx_th_c_005fremove_005f0 = (org.apache.taglibs.standard.tag.common.core.RemoveTag) _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.get(org.apache.taglibs.standard.tag.common.core.RemoveTag.class);
    boolean _jspx_th_c_005fremove_005f0_reused = false;
    try {
      _jspx_th_c_005fremove_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fremove_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /views/common/menubar.jsp(292,6) name = var type = java.lang.String reqTime = false required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setVar("deleteMemAlert");
      // /views/common/menubar.jsp(292,6) name = scope type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fremove_005f0.setScope("session");
      int _jspx_eval_c_005fremove_005f0 = _jspx_th_c_005fremove_005f0.doStartTag();
      if (_jspx_th_c_005fremove_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fremove_0026_005fvar_005fscope_005fnobody.reuse(_jspx_th_c_005fremove_005f0);
      _jspx_th_c_005fremove_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fremove_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fremove_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /views/common/menubar.jsp(391,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.grade eq '관리자'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<div class=\"dropdown_king nav_item\">\r\n");
          out.write("						<a href=\"#\">관리자</a>\r\n");
          out.write("						<div class=\"dropdown_main\">\r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/selectUser.ad?currentPage=1\">\r\n");
          out.write("								<div>관리자페이지</div>\r\n");
          out.write("							</a> \r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/category.ad\">\r\n");
          out.write("								<div>카테고리</div>\r\n");
          out.write("							</a> \r\n");
          out.write("							<a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/disable.ad\">\r\n");
          out.write("								<div>정지회원</div>\r\n");
          out.write("							</a>\r\n");
          out.write("						</div>\r\n");
          out.write("					</div>				\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /views/post/postDetailView.jsp(183,7) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/views/post/postDetailView.jsp(183,7) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /views/post/postDetailView.jsp(183,7) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("at");
      // /views/post/postDetailView.jsp(183,7) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("								<!-- 상세이미지 -->\r\n");
            out.write("								\r\n");
            out.write("								<img id=\"contentImg");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vs.count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" src=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${at.filePath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${at.changeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"200\" height=\"200\">\r\n");
            out.write("								\r\n");
            out.write("								\r\n");
            out.write("							");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent(null);
      // /views/post/postDetailView.jsp(208,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ not empty loginMember }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				<div style=\"text-align: center;\">\r\n");
          out.write("					<!-- 좋아요 버튼 -->\r\n");
          out.write("					<button class=\"btn\" onclick=\"increaseLikeCount();\" id=\"likeButton\"\r\n");
          out.write("						style=\"background-color: rgb(241, 205, 27)\">\r\n");
          out.write("						<i class=\"bi bi-heart\"></i>\r\n");
          out.write("					</button>\r\n");
          out.write("	\r\n");
          out.write("					<!-- 관심 버튼 -->\r\n");
          out.write("					<button class=\"btn\" onclick=\"increaseInterestCount();\"\r\n");
          out.write("						id=\"interestButton\" style=\"background-color: rgb(241, 205, 27)\">\r\n");
          out.write("						<i class=\"bi bi-bookmarks\"></i>\r\n");
          out.write("					</button>\r\n");
          out.write("	\r\n");
          out.write("				</div>\r\n");
          out.write("			");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent(null);
      // /views/post/postDetailView.jsp(229,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty loginMember && loginMember.nickname eq p.nickname}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("				        <!-- 수정 및 삭제 버튼 표시 -->\r\n");
          out.write("				        <button onclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/update.bo?postNo=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'\" \r\n");
          out.write("				        	class = \"button2\" ><b>수정하기</b></button>\r\n");
          out.write("				        <button class = \"button3\" onclick=\"location.href='");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/delete.bo?postNo=");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${p.postNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("'\"  style = \"background-color:rgb(252, 147, 139)\"><b>삭제하기<b></b></button>\r\n");
          out.write("				    ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
