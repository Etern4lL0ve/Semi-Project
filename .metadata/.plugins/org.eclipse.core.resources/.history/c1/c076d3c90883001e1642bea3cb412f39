package com.gz.chat.controller;

import java.io.IOException;
import java.util.ArrayList;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.gz.chat.model.service.ChatService;
import com.gz.chat.model.vo.Chat;

/**
 * Servlet implementation class SelectChatListController
 */
@WebServlet("/selectChat.ch")
public class SelectChatListController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SelectChatListController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		//전체채팅조회
		ArrayList<Chat> list = new ChatService().selectChatList();
		
		request.setAttribute("list", list);
		request.getRequestDispatcher("views/chat/Chat.jsp").forward(request, response);
	
	
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 클라이언트에서 전송한 데이터 받기
        String chatName = request.getParameter("chatName");
        String chatContent = request.getParameter("chatContent");

        // 실제로는 ChatService를 호출하여 데이터베이스에 메시지 저장
        ChatService chatService = new ChatService();
        boolean success = chatService.saveChatMessage(chatName, chatContent);

        if (success) {
            // 성공적으로 저장되었을 경우
            List<Chat> chatList = chatService.getChatMessages(); // 최신 채팅 내용을 가져옴
            request.setAttribute("chatList", chatList);
            RequestDispatcher dispatcher = request.getRequestDispatcher("/chat.jsp");
            dispatcher.forward(request, response);
        } else {
            // 저장에 실패한 경우
            response.getWriter().write("Failed to save chat message.");
        }
    }
}
	


